{"ast":null,"code":"import React,{useState,useRef,useEffect,useContext}from\"react\";import{useTheme}from\"@material-ui/core/styles\";import{useHistory}from\"react-router-dom\";import{format}from\"date-fns\";// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport useSound from\"use-sound\";import Popover from\"@material-ui/core/Popover\";import IconButton from\"@material-ui/core/IconButton\";import List from\"@material-ui/core/List\";import ListItem from\"@material-ui/core/ListItem\";import ListItemText from\"@material-ui/core/ListItemText\";import{makeStyles}from\"@material-ui/core/styles\";import Badge from\"@material-ui/core/Badge\";import ChatIcon from\"@material-ui/icons/Chat\";import TicketListItem from\"../TicketListItem\";import useTickets from\"../../hooks/useTickets\";import alertSound from\"../../assets/sound.mp3\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{i18n}from\"../../translate/i18n\";import toastError from\"../../errors/toastError\";import useCompanySettings from\"../../hooks/useSettings/companySettings\";import Favicon from\"react-favicon\";import{getBackendUrl}from\"../../config\";import defaultLogoFavicon from\"../../assets/favicon.ico\";import{TicketsContext}from\"../../context/Tickets/TicketsContext\";const useStyles=makeStyles(theme=>({tabContainer:{overflowY:\"auto\",maxHeight:350,...theme.scrollbarStyles},popoverPaper:{width:\"100%\",maxWidth:350,marginLeft:theme.spacing(2),marginRight:theme.spacing(1),[theme.breakpoints.down(\"sm\")]:{maxWidth:270}},noShadow:{boxShadow:\"none !important\"}}));const NotificationsPopOver=volume=>{const classes=useStyles();const theme=useTheme();const history=useHistory();// const socketManager = useContext(SocketContext);\nconst{user,socket}=useContext(AuthContext);const{profile,queues}=user;const ticketIdUrl=+history.location.pathname.split(\"/\")[2];const ticketIdRef=useRef(ticketIdUrl);const anchorEl=useRef();const[isOpen,setIsOpen]=useState(false);const[notifications,setNotifications]=useState([]);const queueIds=queues.map(q=>q.id);const{get:getSetting}=useCompanySettings();const{setCurrentTicket,setTabOpen}=useContext(TicketsContext);const[showTicketWithoutQueue,setShowTicketWithoutQueue]=useState(false);const[showNotificationPending,setShowNotificationPending]=useState(false);const[showGroupNotification,setShowGroupNotification]=useState(false);const[,setDesktopNotifications]=useState([]);const{tickets}=useTickets({withUnreadMessages:\"true\"// showAll: showTicketWithoutQueue ? \"true\" : \"false\"\n});const[play]=useSound(alertSound,volume);const soundAlertRef=useRef();const historyRef=useRef(history);useEffect(()=>{const fetchSettings=async()=>{try{const setting=await getSetting({\"column\":\"showNotificationPending\"});if(setting.showNotificationPending===true){setShowNotificationPending(true);}if(user.allTicket===\"enable\"){setShowTicketWithoutQueue(true);}if(user.allowGroup===true){setShowGroupNotification(true);}}catch(err){toastError(err);}};fetchSettings();},[setShowTicketWithoutQueue,setShowNotificationPending]);useEffect(()=>{soundAlertRef.current=play;if(!(\"Notification\"in window)){}else{Notification.requestPermission();}},[play]);useEffect(()=>{const processNotifications=()=>{// if (showTicketWithoutQueue) {\nsetNotifications(tickets);// } else {\n// \tconst newNotifications = tickets.filter(ticket => ticket.status !== \"pending\");\n// \tsetNotifications(newNotifications);\n// }\n};processNotifications();},[tickets]);useEffect(()=>{ticketIdRef.current=ticketIdUrl;},[ticketIdUrl]);useEffect(()=>{const companyId=user.companyId;// const socket = socketManager.GetSocket();\nif(user.id){const queueIds=queues.map(q=>q.id);const onConnectNotificationsPopover=()=>{socket.emit(\"joinNotification\");};const onCompanyTicketNotificationsPopover=data=>{if(data.action===\"updateUnread\"||data.action===\"delete\"){setNotifications(prevState=>{const ticketIndex=prevState.findIndex(t=>t.id===data.ticketId);if(ticketIndex!==-1){prevState.splice(ticketIndex,1);return[...prevState];}return prevState;});setDesktopNotifications(prevState=>{const notfiticationIndex=prevState.findIndex(n=>n.tag===String(data.ticketId));if(notfiticationIndex!==-1){prevState[notfiticationIndex].close();prevState.splice(notfiticationIndex,1);return[...prevState];}return prevState;});}};const onCompanyAppMessageNotificationsPopover=data=>{var _data$ticket,_data$ticket2,_user$queues,_data$ticket3,_data$ticket4,_data$ticket5,_data$ticket6,_data$ticket6$whatsap;// if (\n// \tdata.action === \"create\" && !data.message.fromMe &&\n// \t(\n// \t\tdata.ticket.status !== 'pending' &&\n// \t\tdata.ticket.status !== \"lgpd\" &&\n// \t\tdata.ticket.status !== \"nps\"\t\t\t\t\t\t\n// \t) &&\n// \t(!data.message.read || (data.ticket.status === \"pending\" && showTicketWithoutQueue && data.ticket.queueId === null) || (data.ticket.status === \"pending\" && !showTicketWithoutQueue && user?.queues?.some(queue => (queue.id === data.ticket.queueId)))) &&\n// \t(data.ticket.userId === user?.id || !data.ticket.userId)\n// ) {\n// \nif(data.action===\"create\"&&!data.message.fromMe&&!data.message.read&&(((_data$ticket=data.ticket)===null||_data$ticket===void 0?void 0:_data$ticket.userId)===(user===null||user===void 0?void 0:user.id)||!((_data$ticket2=data.ticket)===null||_data$ticket2===void 0?void 0:_data$ticket2.userId))&&((user===null||user===void 0?void 0:(_user$queues=user.queues)===null||_user$queues===void 0?void 0:_user$queues.some(queue=>queue.id===data.ticket.queueId))||!data.ticket.queueId&&showTicketWithoutQueue===true)&&(![\"pending\",\"lgpd\",\"nps\",\"group\"].includes((_data$ticket3=data.ticket)===null||_data$ticket3===void 0?void 0:_data$ticket3.status)||((_data$ticket4=data.ticket)===null||_data$ticket4===void 0?void 0:_data$ticket4.status)===\"pending\"&&showNotificationPending===true||((_data$ticket5=data.ticket)===null||_data$ticket5===void 0?void 0:_data$ticket5.status)===\"group\"&&((_data$ticket6=data.ticket)===null||_data$ticket6===void 0?void 0:(_data$ticket6$whatsap=_data$ticket6.whatsapp)===null||_data$ticket6$whatsap===void 0?void 0:_data$ticket6$whatsap.groupAsTicket)===\"enabled\"&&showGroupNotification===true)){var _data$ticket7,_data$ticket7$whatsap;setNotifications(prevState=>{const ticketIndex=prevState.findIndex(t=>t.id===data.ticket.id);if(ticketIndex!==-1){prevState[ticketIndex]=data.ticket;return[...prevState];}return[data.ticket,...prevState];});const shouldNotNotificate=data.message.ticketId===ticketIdRef.current&&document.visibilityState===\"visible\"||data.ticket.userId&&data.ticket.userId!==(user===null||user===void 0?void 0:user.id)||data.ticket.isGroup&&((_data$ticket7=data.ticket)===null||_data$ticket7===void 0?void 0:(_data$ticket7$whatsap=_data$ticket7.whatsapp)===null||_data$ticket7$whatsap===void 0?void 0:_data$ticket7$whatsap.groupAsTicket)===\"disabled\"&&showGroupNotification===false;if(shouldNotNotificate===true)return;handleNotifications(data);}};socket.on(\"connect\",onConnectNotificationsPopover);socket.on(\"company-\".concat(companyId,\"-ticket\"),onCompanyTicketNotificationsPopover);socket.on(\"company-\".concat(companyId,\"-appMessage\"),onCompanyAppMessageNotificationsPopover);return()=>{socket.off(\"connect\",onConnectNotificationsPopover);socket.off(\"company-\".concat(companyId,\"-ticket\"),onCompanyTicketNotificationsPopover);socket.off(\"company-\".concat(companyId,\"-appMessage\"),onCompanyAppMessageNotificationsPopover);};}},[user,profile,queues,showTicketWithoutQueue,socket,showNotificationPending,showGroupNotification]);const handleNotifications=data=>{const{message,contact,ticket}=data;const options={body:\"\".concat(message.body,\" - \").concat(format(new Date(),\"HH:mm\")),icon:contact.urlPicture,tag:ticket.id,renotify:true};const notification=new Notification(\"\".concat(i18n.t(\"tickets.notification.message\"),\" \").concat(contact.name),options);notification.onclick=e=>{e.preventDefault();window.focus();setTabOpen(ticket.status);historyRef.current.push(\"/tickets/\".concat(ticket.uuid));// handleChangeTab(null, ticket.isGroup? \"group\" : \"open\");\n};setDesktopNotifications(prevState=>{const notfiticationIndex=prevState.findIndex(n=>n.tag===notification.tag);if(notfiticationIndex!==-1){prevState[notfiticationIndex]=notification;return[...prevState];}return[notification,...prevState];});soundAlertRef.current();};const handleClick=()=>{setIsOpen(prevState=>!prevState);};const handleClickAway=()=>{setIsOpen(false);};const NotificationTicket=_ref=>{let{children}=_ref;return/*#__PURE__*/React.createElement(\"div\",{onClick:handleClickAway},children);};const browserNotification=()=>{const numbers=\"⓿➊➋➌➍➎➏➐➑➒➓⓫⓬⓭⓮⓯⓰⓱⓲⓳⓴\";if(notifications.length>0){if(notifications.length<21){document.title=numbers.substring(notifications.length,notifications.length+1)+\" - \"+(theme.appName||\"...\");}else{document.title=\"(\"+notifications.length+\")\"+(theme.appName||\"...\");}}else{document.title=theme.appName||\"...\";}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Favicon,{animated:true,url:(theme===null||theme===void 0?void 0:theme.appLogoFavicon)?theme.appLogoFavicon:defaultLogoFavicon,alertCount:notifications.length,iconSize:195}));};return/*#__PURE__*/React.createElement(React.Fragment,null,browserNotification(),/*#__PURE__*/React.createElement(IconButton,{onClick:handleClick,ref:anchorEl,\"aria-label\":\"Open Notifications\",color:\"inherit\",style:{color:\"white\"}},/*#__PURE__*/React.createElement(Badge,{overlap:\"rectangular\",badgeContent:notifications.length,color:\"secondary\"},/*#__PURE__*/React.createElement(ChatIcon,null))),/*#__PURE__*/React.createElement(Popover,{disableScrollLock:true,open:isOpen,anchorEl:anchorEl.current,anchorOrigin:{vertical:\"bottom\",horizontal:\"right\"},transformOrigin:{vertical:\"top\",horizontal:\"right\"},classes:{paper:classes.popoverPaper},onClose:handleClickAway},/*#__PURE__*/React.createElement(List,{dense:true,className:classes.tabContainer},notifications.length===0?/*#__PURE__*/React.createElement(ListItem,null,/*#__PURE__*/React.createElement(ListItemText,null,i18n.t(\"notifications.noTickets\"))):notifications.map(ticket=>/*#__PURE__*/React.createElement(NotificationTicket,{key:ticket.id},/*#__PURE__*/React.createElement(TicketListItem,{ticket:ticket}))))));};export default NotificationsPopOver;","map":null,"metadata":{},"sourceType":"module"}