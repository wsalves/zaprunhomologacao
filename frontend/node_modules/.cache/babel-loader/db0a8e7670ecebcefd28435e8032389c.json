{"ast":null,"code":"import{useState,useEffect,useContext}from\"react\";import{useHistory}from\"react-router-dom\";import{has,isArray}from\"lodash\";import{toast}from\"react-toastify\";import{i18n}from\"../../translate/i18n\";import api from\"../../services/api\";import toastError from\"../../errors/toastError\";import{socketConnection}from\"../../services/socket\";// import { useDate } from \"../../hooks/useDate\";\nimport moment from\"moment\";const useAuth=()=>{const history=useHistory();const[isAuth,setIsAuth]=useState(false);const[loading,setLoading]=useState(true);const[user,setUser]=useState({});const[socket,setSocket]=useState({});api.interceptors.request.use(config=>{const token=localStorage.getItem(\"token\");if(token){config.headers[\"Authorization\"]=\"Bearer \".concat(JSON.parse(token));setIsAuth(true);}return config;},error=>{Promise.reject(error);});api.interceptors.response.use(response=>{return response;},async error=>{var _error$response,_error$response2;const originalRequest=error.config;if((error===null||error===void 0?void 0:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===403&&!originalRequest._retry){originalRequest._retry=true;const{data}=await api.post(\"/auth/refresh_token\");if(data){localStorage.setItem(\"token\",JSON.stringify(data.token));api.defaults.headers.Authorization=\"Bearer \".concat(data.token);}return api(originalRequest);}if((error===null||error===void 0?void 0:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401){localStorage.removeItem(\"token\");api.defaults.headers.Authorization=undefined;setIsAuth(false);}return Promise.reject(error);});useEffect(()=>{const token=localStorage.getItem(\"token\");(async()=>{if(token){try{const{data}=await api.post(\"/auth/refresh_token\");api.defaults.headers.Authorization=\"Bearer \".concat(data.token);setIsAuth(true);setUser(data.user);}catch(err){toastError(err);}}setLoading(false);})();},[]);useEffect(()=>{if(Object.keys(user).length&&user.id>0){let io;if(!Object.keys(socket).length){io=socketConnection({user});setSocket(io);}else{io=socket;}io.on(\"company-\".concat(user.companyId,\"-user\"),data=>{if(data.action===\"update\"&&data.user.id===user.id){setUser(data.user);}});return()=>{io.off(\"company-\".concat(user.companyId,\"-user\"));// io.disconnect();\n};}},[user]);const handleLogin=async userData=>{setLoading(true);try{const{data}=await api.post(\"/auth/login\",userData);const{user:{company}}=data;if(has(company,\"companieSettings\")&&isArray(company.companieSettings[0])){const setting=company.companieSettings[0].find(s=>s.key===\"campaignsEnabled\");if(setting&&setting.value===\"true\"){localStorage.setItem(\"cshow\",null);//regra pra exibir campanhas\n}}if(has(company,\"companieSettings\")&&isArray(company.companieSettings[0])){const setting=company.companieSettings[0].find(s=>s.key===\"sendSignMessage\");const signEnable=setting.value===\"enable\";if(setting&&setting.value===\"enabled\"){localStorage.setItem(\"sendSignMessage\",signEnable);//regra pra exibir campanhas\n}}localStorage.setItem(\"profileImage\",data.user.profileImage);//regra pra exibir imagem contato\nmoment.locale('pt-br');let dueDate;if(data.user.company.id===1){dueDate='2999-12-31T00:00:00.000Z';}else{dueDate=data.user.company.dueDate;}const hoje=moment(moment()).format(\"DD/MM/yyyy\");const vencimento=moment(dueDate).format(\"DD/MM/yyyy\");var diff=moment(dueDate).diff(moment(moment()).format());var before=moment(moment().format()).isBefore(dueDate);var dias=moment.duration(diff).asDays();if(before===true){localStorage.setItem(\"token\",JSON.stringify(data.token));// localStorage.setItem(\"public-token\", JSON.stringify(data.user.token));\n// localStorage.setItem(\"companyId\", companyId);\n// localStorage.setItem(\"userId\", id);\nlocalStorage.setItem(\"companyDueDate\",vencimento);api.defaults.headers.Authorization=\"Bearer \".concat(data.token);setUser(data.user);setIsAuth(true);toast.success(i18n.t(\"auth.toasts.success\"));if(Math.round(dias)<5){toast.warn(\"Sua assinatura vence em \".concat(Math.round(dias),\" \").concat(Math.round(dias)===1?'dia':'dias',\" \"));}// // Atraso para garantir que o cache foi limpo\n// setTimeout(() => {\n//   window.location.reload(true); // Recarregar a pÃ¡gina\n// }, 1000);\nhistory.push(\"/tickets\");setLoading(false);}else{// localStorage.setItem(\"companyId\", companyId);\napi.defaults.headers.Authorization=\"Bearer \".concat(data.token);setIsAuth(true);toastError(\"Opss! Sua assinatura venceu \".concat(vencimento,\".\\nEntre em contato com o Suporte para mais informa\\xE7\\xF5es! \"));history.push(\"/financeiro-aberto\");setLoading(false);}}catch(err){toastError(err);setLoading(false);}};const handleLogout=async()=>{setLoading(true);try{// socket.disconnect();\nawait api.delete(\"/auth/logout\");setIsAuth(false);setUser({});localStorage.removeItem(\"token\");localStorage.removeItem(\"cshow\");// localStorage.removeItem(\"public-token\");\napi.defaults.headers.Authorization=undefined;setLoading(false);history.push(\"/login\");}catch(err){toastError(err);setLoading(false);}};const getCurrentUserInfo=async()=>{try{const{data}=await api.get(\"/auth/me\");return data;}catch(_){return null;}};return{isAuth,user,loading,handleLogin,handleLogout,getCurrentUserInfo,socket};};export default useAuth;","map":null,"metadata":{},"sourceType":"module"}