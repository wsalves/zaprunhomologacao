{"ast":null,"code":"import React,{useContext,useEffect,useRef,useState}from\"react\";import{useParams,useHistory}from\"react-router-dom\";import{Button,Dialog,DialogActions,DialogContent,DialogTitle,Grid,makeStyles,Paper,Tab,Tabs,TextField}from\"@material-ui/core\";import ChatList from\"./ChatList\";import ChatMessages from\"./ChatMessages\";import{UsersFilter}from\"../../components/UsersFilter\";import api from\"../../services/api\";// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport{has,isObject}from\"lodash\";import{AuthContext}from\"../../context/Auth/AuthContext\";import withWidth,{isWidthUp}from\"@material-ui/core/withWidth\";import{i18n}from\"../../translate/i18n\";const useStyles=makeStyles(theme=>({mainContainer:{display:\"flex\",flexDirection:\"column\",position:\"relative\",flex:1,padding:theme.spacing(2),height:\"calc(100% - 48px)\",overflowY:\"hidden\",border:\"1px solid rgba(0, 0, 0, 0.12)\"},gridContainer:{flex:1,height:\"100%\",border:\"1px solid rgba(0, 0, 0, 0.12)\",background:theme.palette.background.color},gridItem:{height:\"100%\"},gridItemTab:{height:\"92%\",width:\"100%\"},btnContainer:{textAlign:\"right\",padding:10}}));export function ChatModal(_ref){let{open,chat,type,handleClose,handleLoadNewChat}=_ref;const[users,setUsers]=useState([]);const[title,setTitle]=useState(\"\");useEffect(()=>{setTitle(\"\");setUsers([]);if(type===\"edit\"){const userList=chat.users.map(u=>({id:u.user.id,name:u.user.name}));setUsers(userList);setTitle(chat.title);}},[chat,open,type]);const handleSave=async()=>{try{if(type===\"edit\"){await api.put(\"/chats/\".concat(chat.id),{users,title});}else{const{data}=await api.post(\"/chats\",{users,title});handleLoadNewChat(data);}handleClose();}catch(err){}};return/*#__PURE__*/React.createElement(Dialog,{open:open,onClose:handleClose,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"alert-dialog-title\"},i18n.t(\"chatInternal.modal.title\")),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(Grid,{spacing:2,container:true},/*#__PURE__*/React.createElement(Grid,{xs:12,style:{padding:18},item:true},/*#__PURE__*/React.createElement(TextField,{label:\"T\\xEDtulo\",placeholder:\"T\\xEDtulo\",value:title,onChange:e=>setTitle(e.target.value),variant:\"outlined\",size:\"small\",fullWidth:true})),/*#__PURE__*/React.createElement(Grid,{xs:12,item:true},/*#__PURE__*/React.createElement(UsersFilter,{onFiltered:users=>setUsers(users),initialUsers:users})))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleClose,color:\"primary\"},i18n.t(\"chatInternal.modal.cancel\")),/*#__PURE__*/React.createElement(Button,{onClick:handleSave,color:\"primary\",variant:\"contained\",disabled:users===undefined||users.length===0||title===null||title===\"\"||title===undefined},i18n.t(\"chatInternal.modal.save\"))));}function Chat(props){const classes=useStyles();const{user,socket}=useContext(AuthContext);const history=useHistory();const[showDialog,setShowDialog]=useState(false);const[dialogType,setDialogType]=useState(\"new\");const[currentChat,setCurrentChat]=useState({});const[chats,setChats]=useState([]);const[chatsPageInfo,setChatsPageInfo]=useState({hasMore:false});const[messages,setMessages]=useState([]);const[messagesPageInfo,setMessagesPageInfo]=useState({hasMore:false});const[messagesPage,setMessagesPage]=useState(1);const[loading,setLoading]=useState(false);const[tab,setTab]=useState(0);const isMounted=useRef(true);const scrollToBottomRef=useRef();const{id}=useParams();useEffect(()=>{return()=>{isMounted.current=false;};},[]);useEffect(()=>{if(isMounted.current){findChats().then(data=>{const{records}=data;if(records.length>0){setChats(records);setChatsPageInfo(data);if(id&&records.length){const chat=records.find(r=>r.uuid===id);selectChat(chat);}}});}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);useEffect(()=>{if(isObject(currentChat)&&has(currentChat,\"id\")){findMessages(currentChat.id).then(()=>{if(typeof scrollToBottomRef.current===\"function\"){setTimeout(()=>{scrollToBottomRef.current();},300);}});}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[currentChat]);useEffect(()=>{const companyId=user.companyId;// const socket = socketConnection({ companyId, userId: user.id });\nconst onChatUser=data=>{console.log(data);if(data.action===\"create\"){setChats(prev=>[data.record,...prev]);}if(data.action===\"update\"){const changedChats=chats.map(chat=>{if(chat.id===data.record.id){setCurrentChat(data.record);return{...data.record};}return chat;});setChats(changedChats);}};const onChat=data=>{if(data.action===\"delete\"){const filteredChats=chats.filter(c=>c.id!==+data.id);setChats(filteredChats);setMessages([]);setMessagesPage(1);setMessagesPageInfo({hasMore:false});setCurrentChat({});history.push(\"/chats\");}};const onCurrentChat=data=>{if(data.action===\"new-message\"){setMessages(prev=>[...prev,data.newMessage]);const changedChats=chats.map(chat=>{if(chat.id===data.newMessage.chatId){return{...data.chat};}return chat;});setChats(changedChats);scrollToBottomRef.current();}if(data.action===\"update\"){const changedChats=chats.map(chat=>{if(chat.id===data.chat.id){return{...data.chat};}return chat;});setChats(changedChats);scrollToBottomRef.current();}};socket.on(\"company-\".concat(companyId,\"-chat-user-\").concat(user.id),onChatUser);socket.on(\"company-\".concat(companyId,\"-chat\"),onChat);if(isObject(currentChat)&&has(currentChat,\"id\")){socket.on(\"company-\".concat(companyId,\"-chat-\").concat(currentChat.id),onCurrentChat);}return()=>{socket.off(\"company-\".concat(companyId,\"-chat-user-\").concat(user.id),onChatUser);socket.off(\"company-\".concat(companyId,\"-chat\"),onChat);if(isObject(currentChat)&&has(currentChat,\"id\")){socket.off(\"company-\".concat(companyId,\"-chat-\").concat(currentChat.id),onCurrentChat);}};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[currentChat]);const selectChat=chat=>{try{setMessages([]);setMessagesPage(1);setCurrentChat(chat);setTab(1);}catch(err){}};const sendMessage=async function(contentMessage){let file=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;setLoading(true);try{const formData=new FormData();// Sempre envia a mensagem, mesmo que vazia\nformData.append('message',contentMessage||\"\");if(file){formData.append('media',file);}await api.post(\"/chats/\".concat(currentChat.id,\"/messages\"),formData,{headers:{'Content-Type':'multipart/form-data'}});}catch(err){console.error(err);}setLoading(false);};const deleteChat=async chat=>{try{await api.delete(\"/chats/\".concat(chat.id));}catch(err){}};const findMessages=async chatId=>{setLoading(true);try{const{data}=await api.get(\"/chats/\".concat(chatId,\"/messages?pageNumber=\").concat(messagesPage));setMessagesPage(prev=>prev+1);setMessagesPageInfo(data);setMessages(prev=>[...data.records,...prev]);}catch(err){}setLoading(false);};const loadMoreMessages=async()=>{if(!loading){findMessages(currentChat.id);}};const findChats=async()=>{try{const{data}=await api.get(\"/chats\");return data;}catch(err){console.log(err);}};const renderGrid=()=>{return/*#__PURE__*/React.createElement(Grid,{className:classes.gridContainer,container:true},/*#__PURE__*/React.createElement(Grid,{className:classes.gridItem,md:3,item:true},/*#__PURE__*/React.createElement(\"div\",{className:classes.btnContainer},/*#__PURE__*/React.createElement(Button,{onClick:()=>{setDialogType(\"new\");setShowDialog(true);},color:\"primary\",variant:\"contained\"},i18n.t(\"chatInternal.new\"))),/*#__PURE__*/React.createElement(ChatList,{chats:chats,pageInfo:chatsPageInfo,loading:loading,handleSelectChat:chat=>selectChat(chat),handleDeleteChat:chat=>deleteChat(chat),handleEditChat:()=>{setDialogType(\"edit\");setShowDialog(true);}})),/*#__PURE__*/React.createElement(Grid,{className:classes.gridItem,md:9,item:true},isObject(currentChat)&&has(currentChat,\"id\")&&/*#__PURE__*/React.createElement(ChatMessages,{chat:currentChat,scrollToBottomRef:scrollToBottomRef,pageInfo:messagesPageInfo,messages:messages,loading:loading,handleSendMessage:sendMessage,handleLoadMore:loadMoreMessages})));};const renderTab=()=>{return/*#__PURE__*/React.createElement(Grid,{className:classes.gridContainer,container:true},/*#__PURE__*/React.createElement(Grid,{md:12,item:true},/*#__PURE__*/React.createElement(Tabs,{value:tab,indicatorColor:\"primary\",textColor:\"primary\",onChange:(e,v)=>setTab(v),\"aria-label\":\"disabled tabs example\"},/*#__PURE__*/React.createElement(Tab,{label:\"Chats\"}),/*#__PURE__*/React.createElement(Tab,{label:\"Mensagens\"}))),tab===0&&/*#__PURE__*/React.createElement(Grid,{className:classes.gridItemTab,md:12,item:true},/*#__PURE__*/React.createElement(\"div\",{className:classes.btnContainer},/*#__PURE__*/React.createElement(Button,{onClick:()=>setShowDialog(true),color:\"primary\",variant:\"contained\"},\"Novo\")),/*#__PURE__*/React.createElement(ChatList,{chats:chats,pageInfo:chatsPageInfo,loading:loading,handleSelectChat:chat=>selectChat(chat),handleDeleteChat:chat=>deleteChat(chat)})),tab===1&&/*#__PURE__*/React.createElement(Grid,{className:classes.gridItemTab,md:12,item:true},isObject(currentChat)&&has(currentChat,\"id\")&&/*#__PURE__*/React.createElement(ChatMessages,{scrollToBottomRef:scrollToBottomRef,pageInfo:messagesPageInfo,messages:messages,loading:loading,handleSendMessage:sendMessage,handleLoadMore:loadMoreMessages})));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ChatModal,{type:dialogType,open:showDialog,chat:currentChat,handleLoadNewChat:data=>{setMessages([]);setMessagesPage(1);setCurrentChat(data);setTab(1);history.push(\"/chats/\".concat(data.uuid));},handleClose:()=>setShowDialog(false)}),/*#__PURE__*/React.createElement(Paper,{className:classes.mainContainer},isWidthUp(\"md\",props.width)?renderGrid():renderTab()));}export default withWidth()(Chat);","map":null,"metadata":{},"sourceType":"module"}