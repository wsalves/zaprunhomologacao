{"ast":null,"code":"import React,{useState,useEffect,useReducer,useContext,useMemo}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import List from\"@material-ui/core/List\";import Paper from\"@material-ui/core/Paper\";import TicketListItem from\"../TicketListItemCustom\";import TicketsListSkeleton from\"../TicketsListSkeleton\";import useTickets from\"../../hooks/useTickets\";import{i18n}from\"../../translate/i18n\";import{AuthContext}from\"../../context/Auth/AuthContext\";const useStyles=makeStyles(theme=>({ticketsListWrapper:{position:\"relative\",display:\"flex\",height:\"100%\",flexDirection:\"column\",overflow:\"hidden\",borderTopRightRadius:0,borderBottomRightRadius:0},ticketsList:{flex:1,maxHeight:\"100%\",overflowY:\"scroll\",...theme.scrollbarStyles,borderTop:\"2px solid rgba(0, 0, 0, 0.12)\"},ticketsListHeader:{color:\"rgb(67, 83, 105)\",zIndex:2,backgroundColor:\"white\",borderBottom:\"1px solid rgba(0, 0, 0, 0.12)\",display:\"flex\",alignItems:\"center\",justifyContent:\"space-between\"},ticketsCount:{fontWeight:\"normal\",color:\"rgb(104, 121, 146)\",marginLeft:\"8px\",fontSize:\"14px\"},noTicketsText:{textAlign:\"center\",color:\"rgb(104, 121, 146)\",fontSize:\"14px\",lineHeight:\"1.4\"},noTicketsTitle:{textAlign:\"center\",fontSize:\"16px\",fontWeight:\"600\",margin:\"0px\"},noTicketsDiv:{display:\"flex\",// height: \"190px\",\nmargin:40,flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"}}));const ticketSortAsc=(a,b)=>{if(a.updatedAt<b.updatedAt){return-1;}if(a.updatedAt>b.updatedAt){return 1;}return 0;};const ticketSortDesc=(a,b)=>{if(a.updatedAt>b.updatedAt){return-1;}if(a.updatedAt<b.updatedAt){return 1;}return 0;};const reducer=(state,action)=>{const sortDir=action.sortDir;if(action.type===\"LOAD_TICKETS\"){const newTickets=action.payload;newTickets.forEach(ticket=>{const ticketIndex=state.findIndex(t=>t.id===ticket.id);if(ticketIndex!==-1){state[ticketIndex]=ticket;if(ticket.unreadMessages>0){state.unshift(state.splice(ticketIndex,1)[0]);}}else{state.push(ticket);}});if(sortDir&&['ASC','DESC'].includes(sortDir)){sortDir==='ASC'?state.sort(ticketSortAsc):state.sort(ticketSortDesc);}return[...state];}if(action.type===\"RESET_UNREAD\"){const ticketId=action.payload;const ticketIndex=state.findIndex(t=>t.id===ticketId);if(ticketIndex!==-1){state[ticketIndex].unreadMessages=0;}if(sortDir&&['ASC','DESC'].includes(sortDir)){sortDir==='ASC'?state.sort(ticketSortAsc):state.sort(ticketSortDesc);}return[...state];}if(action.type===\"UPDATE_TICKET\"){const ticket=action.payload;const ticketIndex=state.findIndex(t=>t.id===ticket.id);if(ticketIndex!==-1){state[ticketIndex]=ticket;}else{state.unshift(ticket);}if(sortDir&&['ASC','DESC'].includes(sortDir)){sortDir==='ASC'?state.sort(ticketSortAsc):state.sort(ticketSortDesc);}return[...state];}if(action.type===\"UPDATE_TICKET_UNREAD_MESSAGES\"){const ticket=action.payload;const ticketIndex=state.findIndex(t=>t.id===ticket.id);if(ticketIndex!==-1){state[ticketIndex]=ticket;state.unshift(state.splice(ticketIndex,1)[0]);}else{if(action.status===action.payload.status){state.unshift(ticket);}}if(sortDir&&['ASC','DESC'].includes(sortDir)){sortDir==='ASC'?state.sort(ticketSortAsc):state.sort(ticketSortDesc);}return[...state];}if(action.type===\"UPDATE_TICKET_CONTACT\"){const contact=action.payload;const ticketIndex=state.findIndex(t=>t.contactId===contact.id);if(ticketIndex!==-1){state[ticketIndex].contact=contact;}return[...state];}if(action.type===\"DELETE_TICKET\"){const ticketId=action.payload;const ticketIndex=state.findIndex(t=>t.id===ticketId);if(ticketIndex!==-1){state.splice(ticketIndex,1);}if(sortDir&&['ASC','DESC'].includes(sortDir)){sortDir==='ASC'?state.sort(ticketSortAsc):state.sort(ticketSortDesc);}return[...state];}if(action.type===\"RESET\"){return[];}};const TicketsListCustom=props=>{const{setTabOpen,status,searchParam,searchOnMessages,tags,users,showAll,selectedQueueIds,updateCount,style,whatsappIds,forceSearch,statusFilter,userFilter,sortTickets}=props;const classes=useStyles();const[pageNumber,setPageNumber]=useState(1);let[ticketsList,dispatch]=useReducer(reducer,[]);//   const socketManager = useContext(SocketContext);\nconst{user,socket}=useContext(AuthContext);const{profile,queues}=user;const showTicketWithoutQueue=user.allTicket==='enable';const companyId=user.companyId;useEffect(()=>{dispatch({type:\"RESET\"});setPageNumber(1);},[status,searchParam,dispatch,showAll,tags,users,forceSearch,selectedQueueIds,whatsappIds,statusFilter,sortTickets,searchOnMessages]);const{tickets,hasMore,loading}=useTickets({pageNumber,searchParam,status,showAll,searchOnMessages:searchOnMessages?\"true\":\"false\",tags:JSON.stringify(tags),users:JSON.stringify(users),queueIds:JSON.stringify(selectedQueueIds),whatsappIds:JSON.stringify(whatsappIds),statusFilter:JSON.stringify(statusFilter),userFilter,sortTickets});useEffect(()=>{// const queueIds = queues.map((q) => q.id);\n// const filteredTickets = tickets.filter(\n//     (t) => queueIds.indexOf(t.queueId) > -1\n// );\n// const allticket = user.allTicket === 'enabled';\n// if (profile === \"admin\" || allTicket || allowGroup || allHistoric) {\nif(companyId){dispatch({type:\"LOAD_TICKETS\",payload:tickets,status,sortDir:sortTickets});}// } else {\n//  dispatch({ type: \"LOAD_TICKETS\", payload: filteredTickets });\n// }\n},[tickets]);useEffect(()=>{const shouldUpdateTicket=ticket=>{return(!(ticket===null||ticket===void 0?void 0:ticket.userId)||(ticket===null||ticket===void 0?void 0:ticket.userId)===(user===null||user===void 0?void 0:user.id)||showAll)&&(!(ticket===null||ticket===void 0?void 0:ticket.queueId)&&showTicketWithoutQueue||selectedQueueIds.indexOf(ticket===null||ticket===void 0?void 0:ticket.queueId)>-1);// (!blockNonDefaultConnections || (ticket.status == 'group' && ignoreUserConnectionForGroups) || !user?.whatsappId || ticket.whatsappId == user?.whatsappId);\n};// const shouldUpdateTicketUser = (ticket) =>\n//     selectedQueueIds.indexOf(ticket?.queueId) > -1 && (ticket?.userId === user?.id || !ticket?.userId);\nconst notBelongsToUserQueues=ticket=>ticket.queueId&&selectedQueueIds.indexOf(ticket.queueId)===-1;const onCompanyTicketTicketsList=data=>{if(data.action===\"updateUnread\"){dispatch({type:\"RESET_UNREAD\",payload:data.ticketId,status:status,sortDir:sortTickets});}if(data.action===\"update\"&&shouldUpdateTicket(data.ticket)&&data.ticket.status===status){dispatch({type:\"UPDATE_TICKET\",payload:data.ticket,status:status,sortDir:sortTickets});}// else if (data.action === \"update\" && shouldUpdateTicketUser(data.ticket) && data.ticket.status === status) {\n//     dispatch({\n//         type: \"UPDATE_TICKET\",\n//         payload: data.ticket,\n//     });\n// }\nif(data.action===\"update\"&&notBelongsToUserQueues(data.ticket)){var _data$ticket;dispatch({type:\"DELETE_TICKET\",payload:(_data$ticket=data.ticket)===null||_data$ticket===void 0?void 0:_data$ticket.id,status:status,sortDir:sortTickets});}if(data.action===\"delete\"){dispatch({type:\"DELETE_TICKET\",payload:data===null||data===void 0?void 0:data.ticketId,status:status,sortDir:sortTickets});}};const onCompanyAppMessageTicketsList=data=>{if(data.action===\"create\"&&shouldUpdateTicket(data.ticket)&&data.ticket.status===status){dispatch({type:\"UPDATE_TICKET_UNREAD_MESSAGES\",payload:data.ticket,status:status,sortDir:sortTickets});}// else if (data.action === \"create\" && shouldUpdateTicketUser(data.ticket) && data.ticket.status === status) {\n//     dispatch({\n//         type: \"UPDATE_TICKET_UNREAD_MESSAGES\",\n//         payload: data.ticket,\n//     });\n// }\n};const onCompanyContactTicketsList=data=>{if(data.action===\"update\"&&data.contact){dispatch({type:\"UPDATE_TICKET_CONTACT\",payload:data.contact,status:status,sortDir:sortTickets});}};const onConnectTicketsList=()=>{if(status){socket.emit(\"joinTickets\",status);}else{socket.emit(\"joinNotification\");}};socket.on(\"connect\",onConnectTicketsList);socket.on(\"company-\".concat(companyId,\"-ticket\"),onCompanyTicketTicketsList);socket.on(\"company-\".concat(companyId,\"-appMessage\"),onCompanyAppMessageTicketsList);socket.on(\"company-\".concat(companyId,\"-contact\"),onCompanyContactTicketsList);return()=>{if(status){socket.emit(\"leaveTickets\",status);}else{socket.emit(\"leaveNotification\");}socket.off(\"connect\",onConnectTicketsList);socket.off(\"company-\".concat(companyId,\"-ticket\"),onCompanyTicketTicketsList);socket.off(\"company-\".concat(companyId,\"-appMessage\"),onCompanyAppMessageTicketsList);socket.off(\"company-\".concat(companyId,\"-contact\"),onCompanyContactTicketsList);};},[status,showAll,user,selectedQueueIds,tags,users,profile,queues,sortTickets,showTicketWithoutQueue]);useEffect(()=>{if(typeof updateCount===\"function\"){updateCount(ticketsList.length);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[ticketsList]);const loadMore=()=>{setPageNumber(prevState=>prevState+1);};const handleScroll=e=>{if(!hasMore||loading)return;const{scrollTop,scrollHeight,clientHeight}=e.currentTarget;if(scrollHeight-(scrollTop+100)<clientHeight){loadMore();}};if(status&&status!==\"search\"){ticketsList=ticketsList.filter(ticket=>ticket.status===status);}return/*#__PURE__*/React.createElement(Paper,{className:classes.ticketsListWrapper,style:style},/*#__PURE__*/React.createElement(Paper,{square:true,name:\"closed\",elevation:0,className:classes.ticketsList,onScroll:handleScroll},/*#__PURE__*/React.createElement(List,{style:{paddingTop:0}},ticketsList.length===0&&!loading?/*#__PURE__*/React.createElement(\"div\",{className:classes.noTicketsDiv},/*#__PURE__*/React.createElement(\"span\",{className:classes.noTicketsTitle},i18n.t(\"ticketsList.noTicketsTitle\")),/*#__PURE__*/React.createElement(\"p\",{className:classes.noTicketsText},i18n.t(\"ticketsList.noTicketsMessage\"))):/*#__PURE__*/React.createElement(React.Fragment,null,ticketsList.map(ticket=>/*#__PURE__*/React.createElement(TicketListItem,{ticket:ticket,key:ticket.id,setTabOpen:setTabOpen})// </List>\n)),loading&&/*#__PURE__*/React.createElement(TicketsListSkeleton,null))));};export default TicketsListCustom;","map":null,"metadata":{},"sourceType":"module"}