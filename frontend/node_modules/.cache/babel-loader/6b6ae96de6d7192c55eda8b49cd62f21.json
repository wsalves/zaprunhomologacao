{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _Base = require(\"../styles/Base\");\nvar _InlineInput = _interopRequireDefault(require(\"../widgets/InlineInput\"));\nvar _Tag = _interopRequireDefault(require(\"./Card/Tag\"));\nvar _DeleteButton = _interopRequireDefault(require(\"../widgets/DeleteButton\"));\nclass Card extends _react.Component {\n  constructor() {\n    super(...arguments);\n    (0, _defineProperty2.default)(this, \"onDelete\", e => {\n      this.props.onDelete();\n      e.stopPropagation();\n    });\n  }\n  render() {\n    const _this$props = this.props,\n      showDeleteButton = _this$props.showDeleteButton,\n      style = _this$props.style,\n      tagStyle = _this$props.tagStyle,\n      onClick = _this$props.onClick,\n      onDelete = _this$props.onDelete,\n      onChange = _this$props.onChange,\n      className = _this$props.className,\n      id = _this$props.id,\n      title = _this$props.title,\n      label = _this$props.label,\n      description = _this$props.description,\n      tags = _this$props.tags,\n      cardDraggable = _this$props.cardDraggable,\n      editable = _this$props.editable,\n      t = _this$props.t;\n    const updateCard = card => {\n      onChange((0, _objectSpread2.default)({}, card, {\n        id\n      }));\n    };\n    return _react.default.createElement(_Base.MovableCardWrapper, {\n      \"data-id\": id,\n      onClick: onClick,\n      style: style,\n      className: className\n    }, _react.default.createElement(_Base.CardHeader, null, _react.default.createElement(_Base.CardTitle, {\n      draggable: cardDraggable\n    }, editable ? _react.default.createElement(_InlineInput.default, {\n      value: title,\n      border: true,\n      placeholder: t('placeholder.title'),\n      resize: \"vertical\",\n      onSave: value => updateCard({\n        title: value\n      })\n    }) : title), _react.default.createElement(_Base.CardRightContent, null, editable ? _react.default.createElement(_InlineInput.default, {\n      value: label,\n      border: true,\n      placeholder: t('placeholder.label'),\n      resize: \"vertical\",\n      onSave: value => updateCard({\n        label: value\n      })\n    }) : label), showDeleteButton && _react.default.createElement(_DeleteButton.default, {\n      onClick: this.onDelete\n    })), _react.default.createElement(_Base.Detail, null, editable ? _react.default.createElement(_InlineInput.default, {\n      value: description,\n      border: true,\n      placeholder: t('placeholder.description'),\n      resize: \"vertical\",\n      onSave: value => updateCard({\n        description: value\n      })\n    }) : description), tags && tags.length > 0 && _react.default.createElement(_Base.Footer, null, tags.map(tag => _react.default.createElement(_Tag.default, (0, _extends2.default)({\n      key: tag.title\n    }, tag, {\n      tagStyle: tagStyle\n    })))));\n  }\n}\nCard.propTypes = {\n  showDeleteButton: _propTypes.default.bool,\n  onDelete: _propTypes.default.func,\n  onClick: _propTypes.default.func,\n  style: _propTypes.default.object,\n  tagStyle: _propTypes.default.object,\n  className: _propTypes.default.string,\n  id: _propTypes.default.string.isRequired,\n  title: _propTypes.default.string.isRequired,\n  label: _propTypes.default.string,\n  description: _propTypes.default.string,\n  tags: _propTypes.default.array\n};\nCard.defaultProps = {\n  showDeleteButton: true,\n  onDelete: () => {},\n  onClick: () => {},\n  style: {},\n  tagStyle: {},\n  title: 'no title',\n  description: '',\n  label: '',\n  tags: [],\n  className: ''\n};\nvar _default = Card;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}