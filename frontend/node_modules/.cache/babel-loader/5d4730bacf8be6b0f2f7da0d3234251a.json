{"ast":null,"code":"import React,{useState,useEffect,useReducer,useContext,useRef}from\"react\";// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport{toast}from\"react-toastify\";import{useHistory}from\"react-router-dom\";import{makeStyles}from\"@material-ui/core/styles\";import Table from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import Paper from\"@material-ui/core/Paper\";import Button from\"@material-ui/core/Button\";import Avatar from\"@material-ui/core/Avatar\";import{Facebook,Instagram,WhatsApp}from\"@material-ui/icons\";import SearchIcon from\"@material-ui/icons/Search\";import TextField from\"@material-ui/core/TextField\";import InputAdornment from\"@material-ui/core/InputAdornment\";import IconButton from\"@material-ui/core/IconButton\";import DeleteOutlineIcon from\"@material-ui/icons/DeleteOutline\";import EditIcon from\"@material-ui/icons/Edit\";import CheckCircleIcon from\"@material-ui/icons/CheckCircle\";import CancelIcon from\"@material-ui/icons/Cancel\";import BlockIcon from\"@material-ui/icons/Block\";import api from\"../../services/api\";import TableRowSkeleton from\"../../components/TableRowSkeleton\";import ContactModal from\"../../components/ContactModal\";import ConfirmationModal from\"../../components/ConfirmationModal\";import{i18n}from\"../../translate/i18n\";import MainHeader from\"../../components/MainHeader\";import Title from\"../../components/Title\";import MainHeaderButtonsWrapper from\"../../components/MainHeaderButtonsWrapper\";import MainContainer from\"../../components/MainContainer\";import toastError from\"../../errors/toastError\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{Can}from\"../../components/Can\";import NewTicketModal from\"../../components/NewTicketModal\";import{TagsFilter}from\"../../components/TagsFilter\";import PopupState,{bindTrigger,bindMenu}from\"material-ui-popup-state\";import formatSerializedId from'../../utils/formatSerializedId';import{v4 as uuidv4}from\"uuid\";import{ArrowDropDown,Backup,ContactPhone}from\"@material-ui/icons\";import{Menu,MenuItem}from\"@material-ui/core\";import ContactImportWpModal from\"../../components/ContactImportWpModal\";import useCompanySettings from\"../../hooks/useSettings/companySettings\";import{TicketsContext}from\"../../context/Tickets/TicketsContext\";const reducer=(state,action)=>{if(action.type===\"LOAD_CONTACTS\"){const contacts=action.payload;const newContacts=[];contacts.forEach(contact=>{const contactIndex=state.findIndex(c=>c.id===contact.id);if(contactIndex!==-1){state[contactIndex]=contact;}else{newContacts.push(contact);}});return[...state,...newContacts];}if(action.type===\"UPDATE_CONTACTS\"){const contact=action.payload;const contactIndex=state.findIndex(c=>c.id===contact.id);if(contactIndex!==-1){state[contactIndex]=contact;return[...state];}else{return[contact,...state];}}if(action.type===\"DELETE_CONTACT\"){const contactId=action.payload;const contactIndex=state.findIndex(c=>c.id===contactId);if(contactIndex!==-1){state.splice(contactIndex,1);}return[...state];}if(action.type===\"RESET\"){return[];}};const useStyles=makeStyles(theme=>({mainPaper:{flex:1,padding:theme.spacing(1),overflowY:\"scroll\",...theme.scrollbarStyles}}));const Contacts=()=>{const classes=useStyles();const history=useHistory();//   const socketManager = useContext(SocketContext);\nconst{user,socket}=useContext(AuthContext);const[loading,setLoading]=useState(false);const[pageNumber,setPageNumber]=useState(1);const[searchParam,setSearchParam]=useState(\"\");const[contacts,dispatch]=useReducer(reducer,[]);const[selectedContactId,setSelectedContactId]=useState(null);const[contactModalOpen,setContactModalOpen]=useState(false);const[importContactModalOpen,setImportContactModalOpen]=useState(false);const[deletingContact,setDeletingContact]=useState(null);const[ImportContacts,setImportContacts]=useState(null);const[blockingContact,setBlockingContact]=useState(null);const[unBlockingContact,setUnBlockingContact]=useState(null);const[confirmOpen,setConfirmOpen]=useState(false);const[exportContact,setExportContact]=useState(false);const[confirmChatsOpen,setConfirmChatsOpen]=useState(false);const[hasMore,setHasMore]=useState(false);const[newTicketModalOpen,setNewTicketModalOpen]=useState(false);const[contactTicket,setContactTicket]=useState({});const fileUploadRef=useRef(null);const[selectedTags,setSelectedTags]=useState([]);const{setCurrentTicket}=useContext(TicketsContext);const[importWhatsappId,setImportWhatsappId]=useState();const{getAll:getAllSettings}=useCompanySettings();const[hideNum,setHideNum]=useState(false);const[enableLGPD,setEnableLGPD]=useState(false);useEffect(()=>{async function fetchData(){const settingList=await getAllSettings(user.companyId);for(const[key,value]of Object.entries(settingList)){if(key===\"enableLGPD\")setEnableLGPD(value===\"enabled\");if(key===\"lgpdHideNumber\")setHideNum(value===\"enabled\");}// if (settingHideNumber.lgpdHideNumber === \"enabled\") {\n//     setHideNum(true);\n// }\n}fetchData();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);const handleImportExcel=async()=>{try{const formData=new FormData();formData.append(\"file\",fileUploadRef.current.files[0]);await api.request({url:\"/contacts/upload\",method:\"POST\",data:formData});history.go(0);}catch(err){toastError(err);}};useEffect(()=>{dispatch({type:\"RESET\"});setPageNumber(1);},[searchParam,selectedTags]);useEffect(()=>{setLoading(true);const delayDebounceFn=setTimeout(()=>{const fetchContacts=async()=>{try{const{data}=await api.get(\"/contacts/\",{params:{searchParam,pageNumber,contactTag:JSON.stringify(selectedTags)}});dispatch({type:\"LOAD_CONTACTS\",payload:data.contacts});setHasMore(data.hasMore);setLoading(false);}catch(err){toastError(err);}};fetchContacts();},500);return()=>clearTimeout(delayDebounceFn);},[searchParam,pageNumber,selectedTags]);useEffect(()=>{const companyId=user.companyId;//    const socket = socketManager.GetSocket();\nconst onContactEvent=data=>{if(data.action===\"update\"||data.action===\"create\"){dispatch({type:\"UPDATE_CONTACTS\",payload:data.contact});}if(data.action===\"delete\"){dispatch({type:\"DELETE_CONTACT\",payload:+data.contactId});}};socket.on(\"company-\".concat(companyId,\"-contact\"),onContactEvent);return()=>{socket.off(\"company-\".concat(companyId,\"-contact\"),onContactEvent);};},[socket]);const handleSelectTicket=ticket=>{const code=uuidv4();const{id,uuid}=ticket;setCurrentTicket({id,uuid,code});};const handleCloseOrOpenTicket=ticket=>{setNewTicketModalOpen(false);if(ticket!==undefined&&ticket.uuid!==undefined){handleSelectTicket(ticket);history.push(\"/tickets/\".concat(ticket.uuid));}};const handleSelectedTags=selecteds=>{const tags=selecteds.map(t=>t.id);setSelectedTags(tags);};const handleSearch=event=>{setSearchParam(event.target.value.toLowerCase());};const handleOpenContactModal=()=>{setSelectedContactId(null);setContactModalOpen(true);};const handleCloseContactModal=()=>{setSelectedContactId(null);setContactModalOpen(false);};const hadleEditContact=contactId=>{setSelectedContactId(contactId);setContactModalOpen(true);};const handleDeleteContact=async contactId=>{try{await api.delete(\"/contacts/\".concat(contactId));toast.success(i18n.t(\"contacts.toasts.deleted\"));}catch(err){toastError(err);}setDeletingContact(null);setSearchParam(\"\");setPageNumber(1);};const handleBlockContact=async contactId=>{try{await api.put(\"/contacts/block/\".concat(contactId),{active:false});toast.success(\"Contato bloqueado\");}catch(err){toastError(err);}setDeletingContact(null);setSearchParam(\"\");setPageNumber(1);setBlockingContact(null);};const handleUnBlockContact=async contactId=>{try{await api.put(\"/contacts/block/\".concat(contactId),{active:true});toast.success(\"Contato desbloqueado\");}catch(err){toastError(err);}setDeletingContact(null);setSearchParam(\"\");setPageNumber(1);setUnBlockingContact(null);};const onSave=whatsappId=>{setImportWhatsappId(whatsappId);};const handleimportContact=async()=>{setImportContactModalOpen(false);try{await api.post(\"/contacts/import\",{whatsappId:importWhatsappId});history.go(0);setImportContactModalOpen(false);}catch(err){toastError(err);setImportContactModalOpen(false);}};const handleimportChats=async()=>{try{await api.post(\"/contacts/import/chats\");history.go(0);}catch(err){toastError(err);}};const loadMore=()=>{setPageNumber(prevState=>prevState+1);};const handleScroll=e=>{if(!hasMore||loading)return;const{scrollTop,scrollHeight,clientHeight}=e.currentTarget;if(scrollHeight-(scrollTop+100)<clientHeight){loadMore();}};// function getDateLastMessage(contact) {\n//     if (!contact) return null;\n//     if (!contact.tickets) return null;\n//     if (contact.tickets.length > 0) {\n//         const date = new Date(contact.tickets[contact.tickets.length - 1].updatedAt);\n//         const day = date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\n//         const month = date.getMonth() + 1 > 9 ? date.getMonth() + 1 : `0${date.getMonth() + 1}`;\n//         const year = date.getFullYear();\n//         const hours = date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`;\n//         const minutes = date.getMinutes() > 9 ? date.getMinutes() : `0${date.getMinutes()}`;\n//         return `${day}/${month}/${year} ${hours}:${minutes}`;\n//     }\n//     return null;\n// }\nreturn/*#__PURE__*/React.createElement(MainContainer,{className:classes.mainContainer},/*#__PURE__*/React.createElement(NewTicketModal,{modalOpen:newTicketModalOpen,initialContact:contactTicket,onClose:ticket=>{handleCloseOrOpenTicket(ticket);}}),/*#__PURE__*/React.createElement(ContactModal,{open:contactModalOpen,onClose:handleCloseContactModal,\"aria-labelledby\":\"form-dialog-title\",contactId:selectedContactId}),/*#__PURE__*/React.createElement(ConfirmationModal,{title:deletingContact?\"\".concat(i18n.t(\"contacts.confirmationModal.deleteTitle\"),\" \").concat(deletingContact.name,\"?\"):blockingContact?\"Bloquear Contato \".concat(blockingContact.name,\"?\"):unBlockingContact?\"Desbloquear Contato \".concat(unBlockingContact.name,\"?\"):ImportContacts?\"\".concat(i18n.t(\"contacts.confirmationModal.importTitlte\")):\"\".concat(i18n.t(\"contactListItems.confirmationModal.importTitlte\")),onSave:onSave,isCellPhone:ImportContacts,open:confirmOpen,onClose:setConfirmOpen,onConfirm:e=>deletingContact?handleDeleteContact(deletingContact.id):blockingContact?handleBlockContact(blockingContact.id):unBlockingContact?handleUnBlockContact(unBlockingContact.id):ImportContacts?handleimportContact():handleImportExcel()},exportContact?\"\".concat(i18n.t(\"contacts.confirmationModal.exportContact\")):deletingContact?\"\".concat(i18n.t(\"contacts.confirmationModal.deleteMessage\")):blockingContact?\"\".concat(i18n.t(\"contacts.confirmationModal.blockContact\")):unBlockingContact?\"\".concat(i18n.t(\"contacts.confirmationModal.unblockContact\")):ImportContacts?\"Escolha de qual conex\\xE3o deseja importar\":\"\".concat(i18n.t(\"contactListItems.confirmationModal.importMessage\"))),/*#__PURE__*/React.createElement(ConfirmationModal,{title:i18n.t(\"contacts.confirmationModal.importChat\"),open:confirmChatsOpen,onClose:setConfirmChatsOpen,onConfirm:e=>handleimportChats()},i18n.t(\"contacts.confirmationModal.wantImport\")),/*#__PURE__*/React.createElement(MainHeader,null,/*#__PURE__*/React.createElement(Title,null,i18n.t(\"contacts.title\"),\" (\",contacts.length,\")\"),/*#__PURE__*/React.createElement(MainHeaderButtonsWrapper,null,/*#__PURE__*/React.createElement(TagsFilter,{onFiltered:handleSelectedTags}),/*#__PURE__*/React.createElement(TextField,{placeholder:i18n.t(\"contacts.searchPlaceholder\"),type:\"search\",value:searchParam,onChange:handleSearch,InputProps:{startAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"start\"},/*#__PURE__*/React.createElement(SearchIcon,{color:\"secondary\"}))}}),/*#__PURE__*/React.createElement(PopupState,{variant:\"popover\",popupId:\"demo-popup-menu\"},popupState=>/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,Object.assign({variant:\"contained\",color:\"primary\"},bindTrigger(popupState)),\"Importar / Exportar\",/*#__PURE__*/React.createElement(ArrowDropDown,null)),/*#__PURE__*/React.createElement(Menu,bindMenu(popupState),/*#__PURE__*/React.createElement(MenuItem,{onClick:()=>{setConfirmOpen(true);setImportContacts(true);popupState.close();}},/*#__PURE__*/React.createElement(ContactPhone,{fontSize:\"small\",color:\"primary\",style:{marginRight:10}}),i18n.t(\"contacts.menu.importYourPhone\")),/*#__PURE__*/React.createElement(MenuItem,{onClick:()=>{setImportContactModalOpen(true);}},/*#__PURE__*/React.createElement(Backup,{fontSize:\"small\",color:\"primary\",style:{marginRight:10}}),i18n.t(\"contacts.menu.importToExcel\"))))),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:handleOpenContactModal},i18n.t(\"contacts.buttons.add\")))),importContactModalOpen&&/*#__PURE__*/React.createElement(ContactImportWpModal,{isOpen:importContactModalOpen,handleClose:()=>setImportContactModalOpen(false),selectedTags:selectedTags,hideNum:hideNum,userProfile:user.profile}),/*#__PURE__*/React.createElement(Paper,{className:classes.mainPaper,variant:\"outlined\",onScroll:handleScroll},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"input\",{style:{display:\"none\"},id:\"upload\",name:\"file\",type:\"file\",accept:\".xls,.xlsx\",onChange:()=>{setConfirmOpen(true);},ref:fileUploadRef})),/*#__PURE__*/React.createElement(Table,{size:\"small\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{padding:\"checkbox\"}),/*#__PURE__*/React.createElement(TableCell,null,i18n.t(\"contacts.table.name\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"contacts.table.whatsapp\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"contacts.table.email\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"contacts.table.whatsapp\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},\"Status\"),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"contacts.table.actions\")))),/*#__PURE__*/React.createElement(TableBody,null,/*#__PURE__*/React.createElement(React.Fragment,null,contacts.map(contact=>{var _formatSerializedId,_contact$number,_contact$whatsapp;return/*#__PURE__*/React.createElement(TableRow,{key:contact.id},/*#__PURE__*/React.createElement(TableCell,{style:{paddingRight:0}},/*#__PURE__*/React.createElement(Avatar,{src:\"\".concat(contact===null||contact===void 0?void 0:contact.urlPicture)})),/*#__PURE__*/React.createElement(TableCell,null,contact.name),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},enableLGPD&&hideNum&&user.profile===\"user\"?contact.isGroup?contact.number:formatSerializedId(contact===null||contact===void 0?void 0:contact.number)===null?contact.number.slice(0,-6)+\"**-**\"+(contact===null||contact===void 0?void 0:contact.number.slice(-2)):((_formatSerializedId=formatSerializedId(contact===null||contact===void 0?void 0:contact.number))===null||_formatSerializedId===void 0?void 0:_formatSerializedId.slice(0,-6))+\"**-**\"+(contact===null||contact===void 0?void 0:(_contact$number=contact.number)===null||_contact$number===void 0?void 0:_contact$number.slice(-2)):contact.isGroup?contact.number:formatSerializedId(contact===null||contact===void 0?void 0:contact.number)),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},contact.email),/*#__PURE__*/React.createElement(TableCell,null,contact===null||contact===void 0?void 0:(_contact$whatsapp=contact.whatsapp)===null||_contact$whatsapp===void 0?void 0:_contact$whatsapp.name),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},contact.active?/*#__PURE__*/React.createElement(CheckCircleIcon,{style:{color:\"green\"},fontSize:\"small\"}):/*#__PURE__*/React.createElement(CancelIcon,{style:{color:\"red\"},fontSize:\"small\"})),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},/*#__PURE__*/React.createElement(IconButton,{size:\"small\",disabled:!contact.active,onClick:()=>{setContactTicket(contact);setNewTicketModalOpen(true);// handleSaveTicket(contact.id);\n}},contact.channel===\"whatsapp\"&&/*#__PURE__*/React.createElement(WhatsApp,{style:{color:\"green\"}}),contact.channel===\"instagram\"&&/*#__PURE__*/React.createElement(Instagram,{style:{color:\"purple\"}}),contact.channel===\"facebook\"&&/*#__PURE__*/React.createElement(Facebook,{style:{color:\"blue\"}})),/*#__PURE__*/React.createElement(IconButton,{size:\"small\",onClick:()=>hadleEditContact(contact.id)},/*#__PURE__*/React.createElement(EditIcon,{color:\"secondary\"})),/*#__PURE__*/React.createElement(IconButton,{size:\"small\",onClick:contact.active?()=>{setConfirmOpen(true);setBlockingContact(contact);}:()=>{setConfirmOpen(true);setUnBlockingContact(contact);}},contact.active?/*#__PURE__*/React.createElement(BlockIcon,{color:\"secondary\"}):/*#__PURE__*/React.createElement(CheckCircleIcon,{color:\"secondary\"})),/*#__PURE__*/React.createElement(Can,{role:user.profile,perform:\"contacts-page:deleteContact\",yes:()=>/*#__PURE__*/React.createElement(IconButton,{size:\"small\",onClick:e=>{setConfirmOpen(true);setDeletingContact(contact);}},/*#__PURE__*/React.createElement(DeleteOutlineIcon,{color:\"secondary\"}))})));}),loading&&/*#__PURE__*/React.createElement(TableRowSkeleton,{avatar:true,columns:6}))))));};export default Contacts;","map":null,"metadata":{},"sourceType":"module"}