{"ast":null,"code":"/**\n * A function that merges React refs into one.\n * Supports both functions and ref objects created using createRef() and useRef().\n *\n * Usage:\n * ```tsx\n * <div ref={mergeRefs(ref1, ref2, ref3)} />\n * ```\n *\n * @param {(React.Ref<T> | undefined)[]} inputRefs Array of refs\n * @returns {React.Ref<T> | React.RefCallback<T>} Merged refs\n */\nexport default function mergeRefs() {\n  var inputRefs = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    inputRefs[_i] = arguments[_i];\n  }\n  var filteredInputRefs = inputRefs.filter(Boolean);\n  if (filteredInputRefs.length <= 1) {\n    var firstRef = filteredInputRefs[0];\n    return firstRef || null;\n  }\n  return function mergedRefs(ref) {\n    filteredInputRefs.forEach(function (inputRef) {\n      if (typeof inputRef === 'function') {\n        inputRef(ref);\n      } else if (inputRef) {\n        inputRef.current = ref;\n      }\n    });\n  };\n}","map":null,"metadata":{},"sourceType":"module"}