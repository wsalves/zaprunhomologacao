{"ast":null,"code":"import React,{useEffect,useState,useContext}from'react';import{Dialog,DialogTitle,DialogActions,Button,Box}from'@material-ui/core';import{i18n}from'../../translate/i18n';import{makeStyles}from\"@material-ui/core/styles\";import api from\"../../services/api\";import{Can}from\"../Can\";import{AuthContext}from\"../../context/Auth/AuthContext\";import*as XLSX from\"xlsx\";import{useHistory}from'react-router-dom/cjs/react-router-dom.min';import toastError from'../../errors/toastError';const useStyles=makeStyles(theme=>({multFieldLine:{display:\"flex\",// \"& > *:not(:last-child)\": {\n//   marginRight: theme.spacing(1),\n// },\nmarginTop:8},uploadInput:{display:\"none\"},btns:{margin:15},label:{padding:18,width:\"100%\",textTransform:'uppercase',display:'block',marginTop:10,border:\"solid 2px grey\",textAlign:'center',cursor:'pointer',borderRadius:8}}));const ContactImportWpModal=_ref=>{let{isOpen,handleClose,selectedTags,hideNum,userProfile}=_ref;const classes=useStyles();const{user}=useContext(AuthContext);const history=useHistory();const initialContact={name:\"\",number:\"\",error:\"\"};const[contactsToImport,setContactsToImport]=useState([]);const[statusMessage,setStatusMessage]=useState(\"\");const[currentContact,setCurrentContact]=useState(initialContact);const handleClosed=()=>{setContactsToImport([]);setStatusMessage(\"\");setCurrentContact(initialContact);handleClose();};useEffect(()=>{if(contactsToImport===null||contactsToImport===void 0?void 0:contactsToImport.length){contactsToImport.map(async(item,index)=>{setTimeout(async()=>{try{if(index>=(contactsToImport===null||contactsToImport===void 0?void 0:contactsToImport.length)-1){setStatusMessage(\"importa\\xE7\\xE3o conclu\\xEDda com exito a importa\\xE7\\xE3o\");//setContactsToImport([])\nsetCurrentContact(initialContact);setTimeout(()=>{handleClosed();},15000);}if(index%5===0){setStatusMessage(\"importa\\xE7\\xE3o em andamento \".concat(index,\" de \").concat(contactsToImport===null||contactsToImport===void 0?void 0:contactsToImport.length,\" n\\xE3o saia desta tela at\\xE9 concluir a importa\\xE7\\xE3o\"));// toast.info(\n// );\n}await api.post(\"/contactsImport\",{name:item.name,number:item.number.toString(),email:item.email});setCurrentContact({name:item.name,number:item.number,error:\"success\"});}catch(err){setCurrentContact({name:item.name,number:item.number,error:err});}},330*index);});}},[contactsToImport]);const handleOnExportContacts=async function(){let model=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;const allDatas=[];//const { data } = await api.get(\"/contacts\");\nlet i=1;if(!model){while(i!==0){const{data}=await api.get(\"/contacts/\",{params:{searchParam:\"\",pageNumber:i,contactTag:JSON.stringify(selectedTags)}});data.contacts.forEach(element=>{var _element$tags;const tagsContact=element===null||element===void 0?void 0:(_element$tags=element.tags)===null||_element$tags===void 0?void 0:_element$tags.map(tag=>tag===null||tag===void 0?void 0:tag.name).join(', ');// Concatenando as tags com vírgula\nconst contactWithTags={...element,tags:tagsContact};// Substituindo as tags pelo valor concatenado\nallDatas.push(contactWithTags);});const pages=(data===null||data===void 0?void 0:data.count)/20;i++;if(i>pages){i=0;}}}else{allDatas.push({name:\"João\",number:\"5599999999999\",email:\"\"});}const exportData=allDatas.map(e=>{return{name:e.name,number:hideNum&&userProfile===\"user\"?e.isGroup?e.number:e.number.slice(0,-6)+\"**-**\"+e.number.slice(-2):e.number,email:e.email,tags:e.tags};});let wb=XLSX.utils.book_new();let ws=XLSX.utils.json_to_sheet(exportData);XLSX.utils.book_append_sheet(wb,ws,\"Contatos\");XLSX.writeFile(wb,\"backup_contatos.xlsx\");};const handleImportChange=e=>{const[file]=e.target.files;const reader=new FileReader();reader.onload=evt=>{try{const bstr=evt.target.result;const wb=XLSX.read(bstr,{type:\"binary\"});const wsname=wb.SheetNames[0];const ws=wb.Sheets[wsname];const data=XLSX.utils.sheet_to_json(ws);setContactsToImport(data);}catch(err){console.log(err);setContactsToImport([]);}};reader.readAsArrayBuffer(file);};const handleimportContact=async()=>{try{history.push('/contacts/import');}catch(err){toastError(err);}};return/*#__PURE__*/React.createElement(Dialog,{fullWidth:true,open:isOpen,onClose:handleClosed},/*#__PURE__*/React.createElement(DialogTitle,null,i18n.t(\"Exportar / Importar contatos\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Box,{style:{padding:\"0px 10px 10px\"}},/*#__PURE__*/React.createElement(Can,{role:user.profile,perform:\"contacts-page:deleteContact\",yes:()=>/*#__PURE__*/React.createElement(\"div\",{className:classes.multFieldLine},/*#__PURE__*/React.createElement(Button,{fullWidth:true,size:\"small\",color:\"primary\",variant:\"contained\",onClick:()=>handleOnExportContacts(false)},i18n.t(\"contactImportWpModal.title\")))}),/*#__PURE__*/React.createElement(\"div\",{className:classes.multFieldLine},/*#__PURE__*/React.createElement(Button,{fullWidth:true,size:\"small\",color:\"primary\",variant:\"contained\",onClick:()=>handleOnExportContacts(true)},i18n.t(\"contactImportWpModal.buttons.downloadModel\"))),/*#__PURE__*/React.createElement(\"div\",{className:classes.multFieldLine},/*#__PURE__*/React.createElement(Button,{fullWidth:true,size:\"small\",color:\"primary\",variant:\"contained\",onClick:()=>handleimportContact()},i18n.t(\"contactImportWpModal.buttons.import\"))))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleClose,color:\"primary\"},i18n.t(\"contactImportWpModal.buttons.closed\"))));};export default ContactImportWpModal;","map":null,"metadata":{},"sourceType":"module"}