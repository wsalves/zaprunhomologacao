{"ast":null,"code":"import React,{useState,useEffect}from'react';import Button from'@material-ui/core/Button';import TextField from'@material-ui/core/TextField';import List from'@material-ui/core/List';import{makeStyles}from'@material-ui/core/styles';import*as Yup from\"yup\";import{Formik,Form,Field}from\"formik\";import ContactNotesDialogListItem from'../ContactNotesDialogListItem';import ConfirmationModal from'../ConfirmationModal';import ContactNotesEditModal from'../ContactNotesEditModal';import{toast}from\"react-toastify\";import{i18n}from\"../../translate/i18n\";import ButtonWithSpinner from'../ButtonWithSpinner';import useTicketNotes from'../../hooks/useTicketNotes';import{Grid}from'@material-ui/core';const useStyles=makeStyles(theme=>({root:{'& .MuiTextField-root':{margin:theme.spacing(1),width:'350px'}},list:{width:'100%',maxWidth:'350px',maxHeight:'200px',backgroundColor:theme.palette.background.paper,overflow:'auto'},inline:{width:'100%'}}));const NoteSchema=Yup.object().shape({note:Yup.string().min(2,\"Too Short!\").required(\"Required\")});export function ContactNotes(_ref){let{ticket}=_ref;const{id:ticketId,contactId}=ticket;const classes=useStyles();const[newNote,setNewNote]=useState({note:\"\"});const[loading,setLoading]=useState(false);const[showOnDeleteDialog,setShowOnDeleteDialog]=useState(false);const[selectedNote,setSelectedNote]=useState({});const[notes,setNotes]=useState([]);const{saveNote,deleteNote,listNotes}=useTicketNotes();const[editingNote,setEditingNote]=useState(null);useEffect(()=>{async function openAndFetchData(){handleResetState();await loadNotes();}openAndFetchData();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);const handleResetState=()=>{setNewNote({note:\"\"});setLoading(false);};const handleChangeComment=e=>{setNewNote({note:e.target.value});};const handleEdit=note=>{setEditingNote(note);};const handleSave=async values=>{setLoading(true);try{await saveNote({...values,ticketId,contactId});await loadNotes();setNewNote({note:''});toast.success('Observação adicionada com sucesso!');}catch(e){toast.error(e);}setLoading(false);};const handleOpenDialogDelete=item=>{setSelectedNote(item);setShowOnDeleteDialog(true);};const handleDelete=async()=>{setLoading(true);try{await deleteNote(selectedNote.id);await loadNotes();setSelectedNote({});toast.success('Observação excluída com sucesso!');}catch(e){toast.error(e);}setLoading(false);};const loadNotes=async()=>{setLoading(true);try{const notes=await listNotes({ticketId,contactId});setNotes(notes);}catch(e){toast.error(e);}setLoading(false);};const renderNoteList=()=>{return notes.map(note=>{return/*#__PURE__*/React.createElement(ContactNotesDialogListItem,{note:note,key:note.id,deleteItem:handleOpenDialogDelete,editItem:()=>handleEdit(note)});});};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ContactNotesEditModal,{open:editingNote!==null,onClose:()=>setEditingNote(null),note:editingNote?editingNote.note:'',onSave:handleSave}),/*#__PURE__*/React.createElement(ConfirmationModal,{title:\"Excluir Registro\",open:showOnDeleteDialog,onClose:setShowOnDeleteDialog,onConfirm:handleDelete},\"Deseja realmente excluir este registro?\"),/*#__PURE__*/React.createElement(Formik,{initialValues:newNote,enableReinitialize:true,validationSchema:NoteSchema,onSubmit:(values,actions)=>{setTimeout(()=>{handleSave(values);actions.setSubmitting(false);},400);}},_ref2=>{let{touched,errors,setErrors}=_ref2;return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},/*#__PURE__*/React.createElement(Grid,{xs:12,item:true},/*#__PURE__*/React.createElement(Field,{as:TextField,name:\"note\",rows:3,label:i18n.t(\"ticketOptionsMenu.appointmentsModal.textarea\"),placeholder:i18n.t(\"ticketOptionsMenu.appointmentsModal.placeholder\"),multiline:true,error:touched.note&&Boolean(errors.note),helperText:touched.note&&errors.note,variant:\"outlined\",onChange:handleChangeComment,fullWidth:true})),notes.length>0&&/*#__PURE__*/React.createElement(Grid,{xs:12,item:true},/*#__PURE__*/React.createElement(List,{className:classes.list},renderNoteList())),/*#__PURE__*/React.createElement(Grid,{xs:12,item:true},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},/*#__PURE__*/React.createElement(Grid,{xs:6,item:true},/*#__PURE__*/React.createElement(Button,{onClick:()=>{setNewNote(\"\");setErrors({});},color:\"primary\",variant:\"outlined\",fullWidth:true},\"Cancelar\")),/*#__PURE__*/React.createElement(Grid,{xs:6,item:true},/*#__PURE__*/React.createElement(ButtonWithSpinner,{loading:loading,color:\"primary\",type:\"submit\",variant:\"contained\",autoFocus:true,fullWidth:true},\"Salvar\"))))));}));}","map":null,"metadata":{},"sourceType":"module"}