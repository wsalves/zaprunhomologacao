{"ast":null,"code":"import React,{useState,useContext}from\"react\";import MenuItem from\"@material-ui/core/MenuItem\";import{i18n}from\"../../translate/i18n\";import api from\"../../services/api\";import ConfirmationModal from\"../ConfirmationModal\";import{Menu}from\"@material-ui/core\";import{ReplyMessageContext}from\"../../context/ReplyingMessage/ReplyingMessageContext\";import{ForwardMessageContext}from\"../../context/ForwarMessage/ForwardMessageContext\";import{EditMessageContext}from\"../../context/EditingMessage/EditingMessageContext\";import{TicketsContext}from\"../../context/Tickets/TicketsContext\";// import { v4 as uuidv4 } from \"uuid\";\nimport toastError from\"../../errors/toastError\";import{useHistory}from\"react-router-dom\";import{AuthContext}from\"../../context/Auth/AuthContext\";import ForwardModal from\"../ForwardMessageModal\";import ShowTicketOpen from\"../ShowTicketOpenModal\";import AcceptTicketWithoutQueue from\"../AcceptTicketWithoutQueueModal\";const MessageOptionsMenu=_ref=>{let{message,menuOpen,handleClose,anchorEl,isGroup,queueId,whatsappId}=_ref;const{setReplyingMessage}=useContext(ReplyMessageContext);const[confirmationOpen,setConfirmationOpen]=useState(false);const{user}=useContext(AuthContext);const editingContext=useContext(EditMessageContext);const setEditingMessage=editingContext?editingContext.setEditingMessage:null;const{setTabOpen}=useContext(TicketsContext);const history=useHistory();const[openAlert,setOpenAlert]=useState(false);const[userTicketOpen,setUserTicketOpen]=useState(\"\");const[queueTicketOpen,setQueueTicketOpen]=useState(\"\");const[acceptTicketWithouSelectQueueOpen,setAcceptTicketWithouSelectQueueOpen]=useState(false);const[ticketOpen,setTicketOpen]=useState(null);const{showSelectMessageCheckbox,setShowSelectMessageCheckbox,selectedMessages,forwardMessageModalOpen,setForwardMessageModalOpen}=useContext(ForwardMessageContext);const handleSaveTicket=async contactId=>{if(!contactId)return;try{const{data:ticket}=await api.post(\"/tickets\",{contactId:contactId,userId:user===null||user===void 0?void 0:user.id,status:\"open\",queueId:queueId,whatsappId:whatsappId});setTicketOpen(ticket);if(ticket.queueId===null){setAcceptTicketWithouSelectQueueOpen(true);}else{setTabOpen(\"open\");history.push(\"/tickets/\".concat(ticket.uuid));}}catch(err){const ticket=JSON.parse(err.response.data.error);if(ticket.userId!==(user===null||user===void 0?void 0:user.id)){setOpenAlert(true);setUserTicketOpen(ticket.user.name);setQueueTicketOpen(ticket.queue.name);}else{setOpenAlert(false);setUserTicketOpen(\"\");setQueueTicketOpen(\"\");// handleSelectTicket(ticket);\nsetTabOpen(ticket.status);history.push(\"/tickets/\".concat(ticket.uuid));}}//setLoading(false);\nhandleClose();};const handleCloseAlert=()=>{setOpenAlert(false);setOpenAlert(false);setUserTicketOpen(\"\");setQueueTicketOpen(\"\");};const handleSetShowSelectCheckbox=()=>{setShowSelectMessageCheckbox(!showSelectMessageCheckbox);handleClose();};const handleDeleteMessage=async()=>{try{await api.delete(\"/messages/\".concat(message.id));}catch(err){toastError(err);}};const handleEditMessage=async()=>{setEditingMessage(message);handleClose();};// const handleForwardMessage = (msg) => {\n//   setForwardModalOpen(true);\n//   setForwardMessage(msg);\n//   handleClose();\n// };\n// const handleCloseForwardModal = () => {\n//   //setSelectedSchedule(null);\n//   setForwardModalOpen(false);\n//   handleClose();\n// };\nconst hanldeReplyMessage=()=>{setReplyingMessage(message);handleClose();};const isWithinFifteenMinutes=()=>{const fifteenMinutesInMilliseconds=15*60*1000;// 15 minutos em milissegundos\nconst currentTime=new Date();const messageTime=new Date(message.createdAt);// Verifica se a diferença entre o tempo atual e o tempo da mensagem é menor que 15 minutos\nreturn currentTime-messageTime<=fifteenMinutesInMilliseconds;};const handleOpenConfirmationModal=e=>{setConfirmationOpen(true);handleClose();};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AcceptTicketWithoutQueue,{modalOpen:acceptTicketWithouSelectQueueOpen,onClose:e=>setAcceptTicketWithouSelectQueueOpen(false),ticket:ticketOpen,ticketId:ticketOpen===null||ticketOpen===void 0?void 0:ticketOpen.id}),/*#__PURE__*/React.createElement(ShowTicketOpen,{isOpen:openAlert,handleClose:handleCloseAlert,user:userTicketOpen,queue:queueTicketOpen}),/*#__PURE__*/React.createElement(ConfirmationModal,{title:i18n.t(\"messageOptionsMenu.confirmationModal.title\"),open:confirmationOpen,onClose:setConfirmationOpen,onConfirm:handleDeleteMessage},i18n.t(\"messageOptionsMenu.confirmationModal.message\")),/*#__PURE__*/React.createElement(ForwardModal,{modalOpen:forwardMessageModalOpen,messages:selectedMessages,onClose:e=>{setForwardMessageModalOpen(false);setShowSelectMessageCheckbox(false);}}),/*#__PURE__*/React.createElement(Menu,{anchorEl:anchorEl,getContentAnchorEl:null,anchorOrigin:{vertical:\"bottom\",horizontal:\"right\"},transformOrigin:{vertical:\"top\",horizontal:\"right\"},open:menuOpen,onClose:handleClose},message.fromMe&&/*#__PURE__*/React.createElement(MenuItem,{key:\"delete\",onClick:handleOpenConfirmationModal},i18n.t(\"messageOptionsMenu.delete\")),message.fromMe&&isWithinFifteenMinutes()&&/*#__PURE__*/React.createElement(MenuItem,{key:\"edit\",onClick:handleEditMessage},i18n.t(\"messageOptionsMenu.edit\")),/*#__PURE__*/React.createElement(MenuItem,{onClick:hanldeReplyMessage},i18n.t(\"messageOptionsMenu.reply\")),/*#__PURE__*/React.createElement(MenuItem,{onClick:handleSetShowSelectCheckbox},i18n.t(\"messageOptionsMenu.forward\")),!message.fromMe&&isGroup&&/*#__PURE__*/React.createElement(MenuItem,{onClick:()=>{var _message$contact;return handleSaveTicket(message===null||message===void 0?void 0:(_message$contact=message.contact)===null||_message$contact===void 0?void 0:_message$contact.id);}},i18n.t(\"messageOptionsMenu.talkTo\"))));};export default MessageOptionsMenu;","map":null,"metadata":{},"sourceType":"module"}