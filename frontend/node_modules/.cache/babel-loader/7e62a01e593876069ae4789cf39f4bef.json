{"ast":null,"code":"import React,{useContext,useState}from\"react\";import{Chip,IconButton,List,ListItem,ListItemSecondaryAction,ListItemText,makeStyles}from\"@material-ui/core\";import{useHistory,useParams}from\"react-router-dom\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{useDate}from\"../../hooks/useDate\";import DeleteIcon from\"@material-ui/icons/Delete\";import EditIcon from\"@material-ui/icons/Edit\";import ConfirmationModal from\"../../components/ConfirmationModal\";import api from\"../../services/api\";const useStyles=makeStyles(theme=>({mainContainer:{display:\"flex\",flexDirection:\"column\",position:\"relative\",flex:1,height:\"calc(100% - 58px)\",overflow:\"hidden\",borderRadius:0,backgroundColor:theme.mode==='light'?\"#f2f2f2\":\"#7f7f7f\"},chatList:{display:\"flex\",flexDirection:\"column\",position:\"relative\",flex:1,overflowY:\"scroll\",...theme.scrollbarStyles},listItemActive:{cursor:\"pointer\",backgroundColor:theme.palette.background.paper,borderLeft:\"6px solid #002d6e\"},listItem:{cursor:\"pointer\",backgroundColor:theme.palette.background.color}}));export default function ChatList(_ref){let{chats,handleSelectChat,handleDeleteChat,handleEditChat,pageInfo,loading}=_ref;const classes=useStyles();const history=useHistory();const{user,socket}=useContext(AuthContext);const{datetimeToClient}=useDate();const[confirmationModal,setConfirmModalOpen]=useState(false);const[selectedChat,setSelectedChat]=useState({});const{id}=useParams();const goToMessages=async chat=>{if(unreadMessages(chat)>0){try{await api.post(\"/chats/\".concat(chat.id,\"/read\"),{userId:user.id});}catch(err){}}if(id!==chat.uuid){history.push(\"/chats/\".concat(chat.uuid));handleSelectChat(chat);}};const handleDelete=()=>{handleDeleteChat(selectedChat);};const unreadMessages=chat=>{const currentUser=chat.users.find(u=>u.userId===user.id);return currentUser.unreads;};const getPrimaryText=chat=>{const mainText=chat.title;const unreads=unreadMessages(chat);return/*#__PURE__*/React.createElement(React.Fragment,null,mainText,unreads>0&&/*#__PURE__*/React.createElement(Chip,{size:\"small\",style:{marginLeft:5},label:unreads,color:\"secondary\"}));};const getSecondaryText=chat=>{return chat.lastMessage!==\"\"?\"\".concat(datetimeToClient(chat.updatedAt),\": \").concat(chat.lastMessage):\"\";};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ConfirmationModal,{title:\"Excluir Conversa\",open:confirmationModal,onClose:setConfirmModalOpen,onConfirm:handleDelete},\"Esta a\\xE7\\xE3o n\\xE3o pode ser revertida, confirmar?\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.mainContainer},/*#__PURE__*/React.createElement(\"div\",{className:classes.chatList},/*#__PURE__*/React.createElement(List,null,Array.isArray(chats)&&chats.length>0&&chats.map((chat,key)=>/*#__PURE__*/React.createElement(ListItem,{onClick:()=>goToMessages(chat),key:key,className:chat.uuid===id?classes.listItemActive:classes.listItem// style={getItemStyle(chat)}\n,button:true},/*#__PURE__*/React.createElement(ListItemText,{primary:getPrimaryText(chat),secondary:getSecondaryText(chat)}),chat.ownerId===user.id&&/*#__PURE__*/React.createElement(ListItemSecondaryAction,null,/*#__PURE__*/React.createElement(IconButton,{onClick:()=>{goToMessages(chat).then(()=>{handleEditChat(chat);});},edge:\"end\",\"aria-label\":\"delete\",size:\"small\",style:{marginRight:5}},/*#__PURE__*/React.createElement(EditIcon,null)),/*#__PURE__*/React.createElement(IconButton,{onClick:()=>{setSelectedChat(chat);setConfirmModalOpen(true);},edge:\"end\",\"aria-label\":\"delete\",size:\"small\"},/*#__PURE__*/React.createElement(DeleteIcon,null)))))))));}","map":null,"metadata":{},"sourceType":"module"}