{"ast":null,"code":"import React,{useState,useEffect,useContext}from\"react\";import*as Yup from\"yup\";import{Formik,Form,Field}from\"formik\";import{toast}from\"react-toastify\";import{makeStyles}from\"@material-ui/core/styles\";import{green}from\"@material-ui/core/colors\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import CircularProgress from\"@material-ui/core/CircularProgress\";import Select from\"@material-ui/core/Select\";import InputLabel from\"@material-ui/core/InputLabel\";import MenuItem from\"@material-ui/core/MenuItem\";import FormControl from\"@material-ui/core/FormControl\";import{i18n}from\"../../translate/i18n\";import api from\"../../services/api\";import toastError from\"../../errors/toastError\";import QueueSelect from\"../QueueSelect\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{Can}from\"../Can\";const useStyles=makeStyles(theme=>({root:{display:\"flex\",flexWrap:\"wrap\"},multFieldLine:{display:\"flex\",\"& > *:not(:last-child)\":{marginRight:theme.spacing(1)}},btnWrapper:{position:\"relative\"},buttonProgress:{color:green[500],position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12},formControl:{margin:theme.spacing(1),minWidth:120}}));const UserSchema=Yup.object().shape({name:Yup.string().min(2,\"Too Short!\").max(50,\"Too Long!\").required(\"Required\"),password:Yup.string().min(5,\"Too Short!\").max(50,\"Too Long!\"),email:Yup.string().email(\"Invalid email\").required(\"Required\")});const ModalUsers=_ref=>{let{open,onClose,userId,companyId}=_ref;const classes=useStyles();const initialState={name:\"\",email:\"\",password:\"\",profile:\"user\"};const{user:loggedInUser}=useContext(AuthContext);const[user,setUser]=useState(initialState);const[selectedQueueIds,setSelectedQueueIds]=useState([]);useEffect(()=>{const fetchUser=async()=>{if(!userId)return;if(open){try{var _data$queues;const{data}=await api.get(\"/users/\".concat(userId));setUser(prevState=>{return{...prevState,...data};});const userQueueIds=(_data$queues=data.queues)===null||_data$queues===void 0?void 0:_data$queues.map(queue=>queue.id);setSelectedQueueIds(userQueueIds);}catch(err){toastError(err);}}};fetchUser();},[userId,open]);const handleClose=()=>{onClose();setUser(initialState);};const handleSaveUser=async values=>{const userData={...values,companyId,queueIds:selectedQueueIds};try{if(userId){await api.put(\"/users/\".concat(userId),userData);}else{await api.post(\"/users\",userData);}toast.success(i18n.t(\"userModal.success\"));}catch(err){toastError(err);}handleClose();};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Dialog,{open:open,onClose:handleClose,maxWidth:\"xs\",fullWidth:true,scroll:\"paper\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"form-dialog-title\"},userId?\"\".concat(i18n.t(\"userModal.title.edit\")):\"\".concat(i18n.t(\"userModal.title.add\"))),/*#__PURE__*/React.createElement(Formik,{initialValues:user,enableReinitialize:true,validationSchema:UserSchema,onSubmit:(values,actions)=>{setTimeout(()=>{handleSaveUser(values);actions.setSubmitting(false);},400);}},_ref2=>{let{touched,errors,isSubmitting}=_ref2;return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(DialogContent,{dividers:true},/*#__PURE__*/React.createElement(\"div\",{className:classes.multFieldLine},/*#__PURE__*/React.createElement(Field,{as:TextField,label:i18n.t(\"userModal.form.name\"),autoFocus:true,name:\"name\",error:touched.name&&Boolean(errors.name),helperText:touched.name&&errors.name,variant:\"outlined\",margin:\"dense\",fullWidth:true}),/*#__PURE__*/React.createElement(Field,{as:TextField,label:i18n.t(\"userModal.form.password\"),type:\"password\",name:\"password\",error:touched.password&&Boolean(errors.password),helperText:touched.password&&errors.password,variant:\"outlined\",margin:\"dense\",fullWidth:true})),/*#__PURE__*/React.createElement(\"div\",{className:classes.multFieldLine},/*#__PURE__*/React.createElement(Field,{as:TextField,label:i18n.t(\"userModal.form.email\"),name:\"email\",error:touched.email&&Boolean(errors.email),helperText:touched.email&&errors.email,variant:\"outlined\",margin:\"dense\",fullWidth:true}),/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formControl,margin:\"dense\"},/*#__PURE__*/React.createElement(Can,{role:loggedInUser.profile,perform:\"user-modal:editProfile\",yes:()=>/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(InputLabel,{id:\"profile-selection-input-label\"},i18n.t(\"userModal.form.profile\")),/*#__PURE__*/React.createElement(Field,{as:Select,label:i18n.t(\"userModal.form.profile\"),name:\"profile\",labelId:\"profile-selection-label\",id:\"profile-selection\",required:true},/*#__PURE__*/React.createElement(MenuItem,{value:\"admin\"},\"Admin\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"user\"},\"User\")))}))),/*#__PURE__*/React.createElement(Can,{role:loggedInUser.profile,perform:\"user-modal:editQueues\",yes:()=>/*#__PURE__*/React.createElement(QueueSelect,{selectedQueueIds:selectedQueueIds,onChange:values=>setSelectedQueueIds(values)})})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleClose,color:\"secondary\",disabled:isSubmitting,variant:\"outlined\"},i18n.t(\"userModal.buttons.cancel\")),/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"primary\",disabled:isSubmitting,variant:\"contained\",className:classes.btnWrapper},userId?\"\".concat(i18n.t(\"userModal.buttons.okEdit\")):\"\".concat(i18n.t(\"userModal.buttons.okAdd\")),isSubmitting&&/*#__PURE__*/React.createElement(CircularProgress,{size:24,className:classes.buttonProgress}))));})));};export default ModalUsers;","map":null,"metadata":{},"sourceType":"module"}