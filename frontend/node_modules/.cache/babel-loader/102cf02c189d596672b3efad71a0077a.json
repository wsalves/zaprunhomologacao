{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nclass EditableLabel extends _react.default.Component {\n  constructor(_ref2) {\n    let {\n      value: _value\n    } = _ref2;\n    super();\n    (0, _defineProperty2.default)(this, \"getText\", el => {\n      return el.innerText;\n    });\n    (0, _defineProperty2.default)(this, \"onTextChange\", ev => {\n      const value = this.getText(ev.target);\n      this.setState({\n        value: value\n      });\n    });\n    (0, _defineProperty2.default)(this, \"onBlur\", () => {\n      this.props.onChange(this.state.value);\n    });\n    (0, _defineProperty2.default)(this, \"onPaste\", ev => {\n      ev.preventDefault();\n      const value = ev.clipboardData.getData('text');\n      document.execCommand('insertText', false, value);\n    });\n    (0, _defineProperty2.default)(this, \"getClassName\", () => {\n      const placeholder = this.state.value === '' ? 'comPlainTextContentEditable--has-placeholder' : '';\n      return \"comPlainTextContentEditable \".concat(placeholder);\n    });\n    (0, _defineProperty2.default)(this, \"onKeyDown\", e => {\n      if (e.keyCode === 13) {\n        this.props.onChange(this.state.value);\n        this.refDiv.blur();\n        e.preventDefault();\n      }\n      if (e.keyCode === 27) {\n        this.refDiv.value = this.props.value;\n        this.setState({\n          value: this.props.value\n        }); // this.refDiv.blur()\n\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    });\n    this.state = {\n      value: _value\n    };\n  }\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.refDiv.focus();\n    }\n  }\n  render() {\n    const placeholder = this.props.value.length > 0 ? false : this.props.placeholder;\n    return _react.default.createElement(\"div\", {\n      ref: _ref => this.refDiv = _ref,\n      contentEditable: \"true\",\n      className: this.getClassName(),\n      onPaste: this.onPaste,\n      onBlur: this.onBlur,\n      onInput: this.onTextChange,\n      onKeyDown: this.onKeyDown,\n      placeholder: placeholder\n    });\n  }\n}\nEditableLabel.propTypes = {\n  onChange: _propTypes.default.func,\n  placeholder: _propTypes.default.string,\n  autoFocus: _propTypes.default.bool,\n  inline: _propTypes.default.bool,\n  value: _propTypes.default.string\n};\nEditableLabel.defaultProps = {\n  onChange: () => {},\n  placeholder: '',\n  autoFocus: false,\n  inline: false,\n  value: ''\n};\nvar _default = EditableLabel;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}