{"ast":null,"code":"import React,{useState,useEffect,useReducer,useContext}from\"react\";import{toast}from\"react-toastify\";import{useHistory}from\"react-router-dom\";// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport{makeStyles}from\"@material-ui/core/styles\";import Paper from\"@material-ui/core/Paper\";import Button from\"@material-ui/core/Button\";import Table from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import MainContainer from\"../../components/MainContainer\";import MainHeader from\"../../components/MainHeader\";import Title from\"../../components/Title\";import api from\"../../services/api\";import{i18n}from\"../../translate/i18n\";import TableRowSkeleton from\"../../components/TableRowSkeleton\";import CompanyModal from\"../../components/CompaniesModal\";import ConfirmationModal from\"../../components/ConfirmationModal\";import toastError from\"../../errors/toastError\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{useDate}from\"../../hooks/useDate\";import usePlans from\"../../hooks/usePlans\";import moment from\"moment\";const reducer=(state,action)=>{if(action.type===\"LOAD_COMPANIES\"){const companies=action.payload;const newCompanies=[];companies.forEach(company=>{const companyIndex=state.findIndex(u=>u.id===company.id);if(companyIndex!==-1){state[companyIndex]=company;}else{newCompanies.push(company);}});return[...state,...newCompanies];}if(action.type===\"UPDATE_COMPANIES\"){const company=action.payload;const companyIndex=state.findIndex(u=>u.id===company.id);if(companyIndex!==-1){state[companyIndex]=company;return[...state];}else{return[company,...state];}}if(action.type===\"DELETE_COMPANIES\"){const companyId=action.payload;const companyIndex=state.findIndex(u=>u.id===companyId);if(companyIndex!==-1){state.splice(companyIndex,1);}return[...state];}if(action.type===\"RESET\"){return[];}};const useStyles=makeStyles(theme=>({mainPaper:{flex:1,padding:theme.spacing(1),overflowY:\"scroll\",...theme.scrollbarStyles}}));const Companies=()=>{const classes=useStyles();const history=useHistory();const[loading,setLoading]=useState(false);const[pageNumber,setPageNumber]=useState(1);const[hasMore,setHasMore]=useState(false);const[selectedCompany,setSelectedCompany]=useState(null);const[deletingCompany,setDeletingCompany]=useState(null);const[companyModalOpen,setCompanyModalOpen]=useState(false);const[confirmModalOpen,setConfirmModalOpen]=useState(false);const[searchParam,setSearchParam]=useState(\"\");const[companies,dispatch]=useReducer(reducer,[]);const{dateToClient,datetimeToClient}=useDate();// const { getPlanCompany } = usePlans();\n//   const socketManager = useContext(SocketContext);\nconst{user,socket}=useContext(AuthContext);useEffect(()=>{async function fetchData(){if(!user.super){toast.error(\"Esta empresa não possui permissão para acessar essa página! Estamos lhe redirecionando.\");setTimeout(()=>{history.push(\"/\");},1000);}}fetchData();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);useEffect(()=>{dispatch({type:\"RESET\"});setPageNumber(1);},[searchParam]);useEffect(()=>{setLoading(true);const delayDebounceFn=setTimeout(()=>{const fetchCompanies=async()=>{try{const{data}=await api.get(\"/companiesPlan/\",{params:{searchParam,pageNumber}});dispatch({type:\"LOAD_COMPANIES\",payload:data.companies});setHasMore(data.hasMore);setLoading(false);}catch(err){toastError(err);}};fetchCompanies();},500);return()=>clearTimeout(delayDebounceFn);},[searchParam,pageNumber]);//     useEffect(() => {\n//         const companyId = user.companyId;\n//   //    const socket = socketManager.GetSocket();\n//         // const socket = socketConnection();\n//         return () => {\n//             socket.disconnect();\n//         };\n//     }, []);\nconst handleOpenCompanyModal=()=>{setSelectedCompany(null);setCompanyModalOpen(true);};const handleCloseCompanyModal=()=>{setSelectedCompany(null);setCompanyModalOpen(false);};const handleSearch=event=>{setSearchParam(event.target.value.toLowerCase());};const handleEditCompany=company=>{setSelectedCompany(company);setCompanyModalOpen(true);};const handleDeleteCompany=async companyId=>{try{await api.delete(\"/companies/\".concat(companyId));toast.success(i18n.t(\"compaies.toasts.deleted\"));}catch(err){toastError(err);}setDeletingCompany(null);setSearchParam(\"\");setPageNumber(1);};const loadMore=()=>{setPageNumber(prevState=>prevState+1);};const handleScroll=e=>{if(!hasMore||loading)return;const{scrollTop,scrollHeight,clientHeight}=e.currentTarget;if(scrollHeight-(scrollTop+100)<clientHeight){loadMore();}};const renderStatus=row=>{return row.status===false?\"Não\":\"Sim\";};const renderPlanValue=row=>{return row.planId!==null?row.plan.amount?row.plan.amount.toLocaleString('pt-br',{minimumFractionDigits:2}):'00.00':\"-\";};const renderWhatsapp=row=>{return row.useWhatsapp===false?\"Não\":\"Sim\";};const renderFacebook=row=>{return row.useFacebook===false?\"Não\":\"Sim\";};const renderInstagram=row=>{return row.useInstagram===false?\"Não\":\"Sim\";};const renderCampaigns=row=>{return row.useCampaigns===false?\"Não\":\"Sim\";};const renderSchedules=row=>{return row.useSchedules===false?\"Não\":\"Sim\";};const renderInternalChat=row=>{return row.useInternalChat===false?\"Não\":\"Sim\";};const renderExternalApi=row=>{return row.useExternalApi===false?\"Não\":\"Sim\";};const rowStyle=record=>{if(moment(record.dueDate).isValid()){const now=moment();const dueDate=moment(record.dueDate);const diff=dueDate.diff(now,\"days\");if(diff>=1&&diff<=5){return{backgroundColor:\"#fffead\"};}if(diff<=0){return{backgroundColor:\"#fa8c8c\"};}// else {\n//   return { backgroundColor: \"#affa8c\" };\n// }\n}return{};};return/*#__PURE__*/React.createElement(MainContainer,null,/*#__PURE__*/React.createElement(ConfirmationModal,{title:deletingCompany&&\"\".concat(i18n.t(\"compaies.confirmationModal.deleteTitle\"),\" \").concat(deletingCompany.name,\"?\"),open:confirmModalOpen,onClose:setConfirmModalOpen,onConfirm:()=>handleDeleteCompany(deletingCompany.id)},i18n.t(\"compaies.confirmationModal.deleteMessage\")),/*#__PURE__*/React.createElement(CompanyModal,{open:companyModalOpen,onClose:handleCloseCompanyModal,\"aria-labelledby\":\"form-dialog-title\",companyId:selectedCompany&&selectedCompany.id}),/*#__PURE__*/React.createElement(MainHeader,null,/*#__PURE__*/React.createElement(Title,null,i18n.t(\"compaies.title\"),\" (\",companies.length,\")\")),/*#__PURE__*/React.createElement(Paper,{className:classes.mainPaper,variant:\"outlined\",onScroll:handleScroll},/*#__PURE__*/React.createElement(Table,{size:\"small\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.ID\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.status\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.name\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.email\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.namePlan\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.value\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.createdAt\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.dueDate\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.lastLogin\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},\"Tamanho da pasta\"),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},\"Total de arquivos\"),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},\"Ultimo update\"))),/*#__PURE__*/React.createElement(TableBody,null,/*#__PURE__*/React.createElement(React.Fragment,null,companies.map(company=>{var _company$plan;return/*#__PURE__*/React.createElement(TableRow,{style:rowStyle(company),key:company.id},/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},company.id),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},renderStatus(company.status)),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},company.name),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},company.email),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},company===null||company===void 0?void 0:(_company$plan=company.plan)===null||_company$plan===void 0?void 0:_company$plan.name),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},\"R$ \",renderPlanValue(company)),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},dateToClient(company.createdAt)),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},dateToClient(company.dueDate),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",null,company.recurrence)),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},datetimeToClient(company.lastLogin)),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},company.folderSize),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},company.numberFileFolder),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},datetimeToClient(company.updatedAtFolder)));}),loading&&/*#__PURE__*/React.createElement(TableRowSkeleton,{columns:4}))))));};export default Companies;","map":null,"metadata":{},"sourceType":"module"}