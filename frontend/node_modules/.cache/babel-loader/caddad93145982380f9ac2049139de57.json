{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import*as Yup from\"yup\";import{Formik,Form,Field}from\"formik\";import{toast}from\"react-toastify\";import{makeStyles}from\"@material-ui/core/styles\";import{green}from\"@material-ui/core/colors\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import CircularProgress from\"@material-ui/core/CircularProgress\";import{i18n}from\"../../translate/i18n\";import api from\"../../services/api\";import toastError from\"../../errors/toastError\";const useStyles=makeStyles(theme=>({root:{display:\"flex\",flexWrap:\"wrap\"},multFieldLine:{display:\"flex\",\"& > *:not(:last-child)\":{marginRight:theme.spacing(1)}},btnWrapper:{position:\"relative\"},buttonProgress:{color:green[500],position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12},formControl:{margin:theme.spacing(1),minWidth:120}}));const ContactListSchema=Yup.object().shape({name:Yup.string().min(2,\"Too Short!\").max(50,\"Too Long!\").required(\"Required\")});const ContactListModal=_ref=>{let{open,onClose,contactListId}=_ref;const classes=useStyles();const initialState={name:\"\"};const[contactList,setContactList]=useState(initialState);useEffect(()=>{const fetchContactList=async()=>{if(!contactListId)return;try{const{data}=await api.get(\"/contact-lists/\".concat(contactListId));setContactList(prevState=>{return{...prevState,...data};});}catch(err){toastError(err);}};fetchContactList();},[contactListId,open]);const handleClose=()=>{onClose();setContactList(initialState);};const handleSaveContactList=async values=>{const contactListData={...values};try{if(contactListId){await api.put(\"/contact-lists/\".concat(contactListId),contactListData);}else{await api.post(\"/contact-lists\",contactListData);}toast.success(i18n.t(\"contactList.dialog\"));}catch(err){toastError(err);}handleClose();};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Dialog,{open:open,onClose:handleClose,maxWidth:\"xs\",fullWidth:true,scroll:\"paper\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"form-dialog-title\"},contactListId?\"\".concat(i18n.t(\"contactLists.dialog.edit\")):\"\".concat(i18n.t(\"contactLists.dialog.add\"))),/*#__PURE__*/React.createElement(Formik,{initialValues:contactList,enableReinitialize:true,validationSchema:ContactListSchema,onSubmit:(values,actions)=>{setTimeout(()=>{handleSaveContactList(values);actions.setSubmitting(false);},400);}},_ref2=>{let{touched,errors,isSubmitting}=_ref2;return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(DialogContent,{dividers:true},/*#__PURE__*/React.createElement(\"div\",{className:classes.multFieldLine},/*#__PURE__*/React.createElement(Field,{as:TextField,label:i18n.t(\"contactLists.dialog.name\"),autoFocus:true,name:\"name\",error:touched.name&&Boolean(errors.name),helperText:touched.name&&errors.name,variant:\"outlined\",margin:\"dense\",fullWidth:true}))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleClose,color:\"secondary\",disabled:isSubmitting,variant:\"outlined\"},i18n.t(\"contactLists.dialog.cancel\")),/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"primary\",disabled:isSubmitting,variant:\"contained\",className:classes.btnWrapper},contactListId?\"\".concat(i18n.t(\"contactLists.dialog.okEdit\")):\"\".concat(i18n.t(\"contactLists.dialog.okAdd\")),isSubmitting&&/*#__PURE__*/React.createElement(CircularProgress,{size:24,className:classes.buttonProgress}))));})));};export default ContactListModal;","map":null,"metadata":{},"sourceType":"module"}