{"ast":null,"code":"import React,{useState,useContext,useEffect}from\"react\";import{useHistory}from\"react-router-dom\";import{Button,Dialog,DialogActions,DialogContent,DialogTitle,FormControl,InputLabel,makeStyles,MenuItem,Select}from\"@material-ui/core\";import{v4 as uuidv4}from\"uuid\";import api from\"../../services/api\";import{AuthContext}from\"../../context/Auth/AuthContext\";import ButtonWithSpinner from\"../ButtonWithSpinner\";import{i18n}from\"../../translate/i18n\";import toastError from\"../../errors/toastError\";import{Form,Formik}from\"formik\";import ShowTicketOpen from\"../ShowTicketOpenModal\";import useCompanySettings from\"../../hooks/useSettings/companySettings\";import{TicketsContext}from\"../../context/Tickets/TicketsContext\";// const filter = createFilterOptions({\n// \ttrim: true,\n// });\nconst useStyles=makeStyles(theme=>({autoComplete:{width:300// marginBottom: 20 \n},maxWidth:{width:\"100%\"},buttonColorError:{color:theme.palette.error.main,borderColor:theme.palette.error.main}}));const AcceptTicketWithouSelectQueue=_ref=>{let{modalOpen,onClose,ticketId,ticket}=_ref;const history=useHistory();const classes=useStyles();const[selectedQueue,setSelectedQueue]=useState('');const[loading,setLoading]=useState(false);const{user}=useContext(AuthContext);const[openAlert,setOpenAlert]=useState(false);const[userTicketOpen,setUserTicketOpen]=useState(\"\");const[queueTicketOpen,setQueueTicketOpen]=useState(\"\");const{tabOpen,setTabOpen}=useContext(TicketsContext);const{get:getSetting}=useCompanySettings();useEffect(()=>{try{if(user.queues.length===1){setSelectedQueue(user.queues[0].id);}}catch(err){setLoading(false);toastError(err);}},[selectedQueue]);const handleClose=()=>{onClose();setSelectedQueue(\"\");};const handleCloseAlert=()=>{setOpenAlert(false);setLoading(false);};const handleSendMessage=async id=>{var _ticket$whatsapp;let isGreetingMessage=false;try{const setting=await getSetting({\"column\":\"sendGreetingAccepted\"});if(setting.sendGreetingAccepted===\"enabled\")isGreetingMessage=true;}catch(err){toastError(err);}let settingMessage;try{settingMessage=await getSetting({\"column\":\"greetingAcceptedMessage\"});}catch(err){toastError(err);}if(isGreetingMessage&&(!ticket.isGroup||((_ticket$whatsapp=ticket.whatsapp)===null||_ticket$whatsapp===void 0?void 0:_ticket$whatsapp.groupAsTicket)===\"enabled\")&&ticket.status===\"pending\"){const msg=\"\".concat(settingMessage.greetingAcceptedMessage);// const msg = `{{ms}} *{{name}}*, ${i18n.t(\"mainDrawer.appBar.user.myName\")} *${user?.name}* ${i18n.t(\"mainDrawer.appBar.user.continuity\")}.`;\nconst message={read:1,fromMe:true,mediaUrl:\"\",body:\"\".concat(msg.trim())};try{await api.post(\"/messages/\".concat(id),message);}catch(err){toastError(err);}}};const handleUpdateTicketStatus=async queueId=>{setLoading(true);try{const otherTicket=await api.put(\"/tickets/\".concat(ticketId),{status:ticket.isGroup&&ticket.channel==='whatsapp'?\"group\":\"open\",userId:(user===null||user===void 0?void 0:user.id)||null,queueId:queueId});if(otherTicket.data.id!==ticket.id){if(otherTicket.data.userId!==(user===null||user===void 0?void 0:user.id)){setOpenAlert(true);setUserTicketOpen(otherTicket.data.user.name);setQueueTicketOpen(otherTicket.data.queue.name);}else{setLoading(false);setTabOpen(otherTicket.isGroup?\"group\":\"open\");history.push(\"/tickets/\".concat(otherTicket.data.uuid));}}else{handleSendMessage(ticket.id);setLoading(false);setTabOpen(ticket.isGroup?\"group\":\"open\");history.push(\"/tickets/\".concat(ticket.uuid));handleClose();}}catch(err){setLoading(false);toastError(err);}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Dialog,{open:modalOpen,onClose:handleClose},/*#__PURE__*/React.createElement(DialogTitle,{id:\"form-dialog-title\"},i18n.t(\"ticketsList.acceptModal.title\")),/*#__PURE__*/React.createElement(DialogContent,{dividers:true},/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.maxWidth},/*#__PURE__*/React.createElement(InputLabel,null,i18n.t(\"ticketsList.acceptModal.queue\")),/*#__PURE__*/React.createElement(Select,{value:selectedQueue,className:classes.autoComplete,onChange:e=>setSelectedQueue(e.target.value),label:i18n.t(\"ticketsList.acceptModal.queue\")},/*#__PURE__*/React.createElement(MenuItem,{value:''},\"\\xA0\"),user.queues.map(queue=>/*#__PURE__*/React.createElement(MenuItem,{key:queue.id,value:queue.id},queue.name))))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleClose,className:classes.buttonColorError,disabled:loading,variant:\"outlined\"},i18n.t(\"ticketsList.buttons.cancel\")),/*#__PURE__*/React.createElement(ButtonWithSpinner,{variant:\"contained\",type:\"button\",disabled:selectedQueue===\"\",onClick:()=>handleUpdateTicketStatus(selectedQueue),color:\"primary\",loading:loading},i18n.t(\"ticketsList.buttons.start\"))),/*#__PURE__*/React.createElement(ShowTicketOpen,{isOpen:openAlert,handleClose:handleCloseAlert,user:userTicketOpen,queue:queueTicketOpen})));};export default AcceptTicketWithouSelectQueue;","map":null,"metadata":{},"sourceType":"module"}