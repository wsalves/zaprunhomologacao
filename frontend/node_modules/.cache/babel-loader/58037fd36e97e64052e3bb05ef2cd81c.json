{"ast":null,"code":"import React,{useState,useEffect,useReducer,useContext}from\"react\";import{toast}from\"react-toastify\";import{useHistory}from\"react-router-dom\";import{makeStyles}from\"@material-ui/core/styles\";import Paper from\"@material-ui/core/Paper\";import TextField from\"@material-ui/core/TextField\";import api from\"../../services/api\";import ConfirmationModal from\"../../components/ConfirmationModal\";import{i18n}from\"../../translate/i18n\";import MainHeader from\"../../components/MainHeader\";import Title from\"../../components/Title\";import MainContainer from\"../../components/MainContainer\";import toastError from\"../../errors/toastError\";import{AuthContext}from\"../../context/Auth/AuthContext\";import NewTicketModal from\"../../components/NewTicketModal\";import{SocketContext}from\"../../context/Socket/SocketContext\";import{AddCircle,Build,ContentCopy,DevicesFold,MoreVert,WebhookOutlined}from\"@mui/icons-material\";import{Autocomplete,Button,Chip,CircularProgress,Grid,Menu,MenuItem,Stack,Typography}from\"@mui/material\";import FlowBuilderModal from\"../../components/FlowBuilderModal\";import{colorBackgroundTable,colorLineTable,colorLineTableHover,colorPrimary,colorTitleTable,colorTopTable}from\"../../styles/styles\";const reducer=(state,action)=>{if(action.type===\"LOAD_CONTACTS\"){const contacts=action.payload;const newContacts=[];contacts.forEach(contact=>{const contactIndex=state.findIndex(c=>c.id===contact.id);if(contactIndex!==-1){state[contactIndex]=contact;}else{newContacts.push(contact);}});return[...state,...newContacts];}if(action.type===\"UPDATE_CONTACTS\"){const contact=action.payload;const contactIndex=state.findIndex(c=>c.id===contact.id);if(contactIndex!==-1){state[contactIndex]=contact;return[...state];}else{return[contact,...state];}}if(action.type===\"DELETE_CONTACT\"){const contactId=action.payload;const contactIndex=state.findIndex(c=>c.id===contactId);if(contactIndex!==-1){state.splice(contactIndex,1);}return[...state];}if(action.type===\"RESET\"){return[];}};const useStyles=makeStyles(theme=>({mainPaper:{flex:1,backgroundColor:\"#ffff\",borderRadius:12,padding:theme.spacing(1),overflowY:\"scroll\",...theme.scrollbarStyles}}));const FlowDefault=()=>{const classes=useStyles();const history=useHistory();const[loading,setLoading]=useState(true);const[pageNumber,setPageNumber]=useState(1);const[searchParam,setSearchParam]=useState(\"\");const[contacts,dispatch]=useReducer(reducer,[]);const[webhooks,setWebhooks]=useState([]);const[selectedContactId,setSelectedContactId]=useState(null);const[selectedWebhookName,setSelectedWebhookName]=useState(null);const[contactModalOpen,setContactModalOpen]=useState(false);const[newTicketModalOpen,setNewTicketModalOpen]=useState(false);const[contactTicket,setContactTicket]=useState({});const[deletingContact,setDeletingContact]=useState(null);const[confirmOpen,setConfirmOpen]=useState(false);const[confirmDuplicateOpen,setConfirmDuplicateOpen]=useState(false);const[configExist,setConfigExist]=useState(false);const[flowsData,setFlowsData]=useState([]);const[flowsDataObj,setFlowsDataObj]=useState([]);const[flowSelectedWelcome,setFlowSelectedWelcome]=useState(null);const[flowSelectedPhrase,setFlowSelectedPhrase]=useState(null);const[hasMore,setHasMore]=useState(false);const[reloadData,setReloadData]=useState(false);const{user,socket}=useContext(AuthContext);useEffect(()=>{dispatch({type:\"RESET\"});setPageNumber(1);},[searchParam]);const getFlows=async()=>{return await api.get(\"/flowbuilder\").then(res=>{setFlowsData(res.data.flows.map(flow=>flow.name));setFlowsDataObj(res.data.flows);return res.data.flows;});};const getFlowsDefault=async flowData=>{await api.get(\"/flowdefault\").then(res=>{var _res$data$flow,_res$data$flow2,_res$data$flow3;if((_res$data$flow=res.data.flow)===null||_res$data$flow===void 0?void 0:_res$data$flow.companyId){setConfigExist(true);}if((_res$data$flow2=res.data.flow)===null||_res$data$flow2===void 0?void 0:_res$data$flow2.flowIdWelcome){const flowName=flowData.filter(item=>item.id===res.data.flow.flowIdWelcome);if(flowName.length>0){setFlowSelectedWelcome(flowName[0].name);}else{setFlowSelectedWelcome();}}if((_res$data$flow3=res.data.flow)===null||_res$data$flow3===void 0?void 0:_res$data$flow3.flowIdNotPhrase){const flowName=flowData.filter(item=>item.id===res.data.flow.flowIdNotPhrase);if(flowName.length>0){setFlowSelectedPhrase(flowName[0].name);}else{setFlowSelectedPhrase();}}setLoading(false);});};useEffect(()=>{const companyId=localStorage.getItem(\"companyId\");const onContact=data=>{if(data.action===\"update\"||data.action===\"create\"){dispatch({type:\"UPDATE_CONTACTS\",payload:data.contact});}if(data.action===\"delete\"){dispatch({type:\"DELETE_CONTACT\",payload:+data.contactId});}};socket.on(\"company-\".concat(companyId,\"-contact\"),onContact);getFlows().then(res=>{getFlowsDefault(res);});return()=>{socket.disconnect();};},[]);const handleCloseContactModal=()=>{setSelectedContactId(null);setContactModalOpen(false);};const handleCloseOrOpenTicket=ticket=>{setNewTicketModalOpen(false);if(ticket!==undefined&&ticket.uuid!==undefined){history.push(\"/tickets/\".concat(ticket.uuid));}};const handleDeleteWebhook=async webhookId=>{try{await api.delete(\"/flowbuilder/\".concat(webhookId)).then(res=>{setDeletingContact(null);setReloadData(old=>!old);});toast.success(\"Fluxo excluído com sucesso\");}catch(err){toastError(err);}};const handleSaveDefault=async()=>{let idWelcome=flowsDataObj.filter(item=>item.name===flowSelectedWelcome);let idPhrase=flowsDataObj.filter(item=>item.name===flowSelectedPhrase);if(idWelcome.length===0){idWelcome=null;}else{idWelcome=idWelcome[0].id;}if(idPhrase.length===0){idPhrase=null;}else{idPhrase=idPhrase[0].id;}if(configExist){try{await api.put(\"/flowdefault\",{flowIdWelcome:idWelcome,flowIdPhrase:idPhrase}).then(res=>{setDeletingContact(null);setReloadData(old=>!old);});toast.success(\"Fluxos padrões atualizados\");}catch(err){toastError(err);}}else{try{await api.post(\"/flowdefault\",{flowIdWelcome:idWelcome,flowIdPhrase:idPhrase}).then(res=>{setDeletingContact(null);setReloadData(old=>!old);});toast.success(\"Fluxos padrões atualizados\");}catch(err){toastError(err);}}};const loadMore=()=>{setPageNumber(prevState=>prevState+1);};return/*#__PURE__*/React.createElement(MainContainer,{className:classes.mainContainer},/*#__PURE__*/React.createElement(NewTicketModal,{modalOpen:newTicketModalOpen,initialContact:contactTicket,onClose:ticket=>{handleCloseOrOpenTicket(ticket);}}),/*#__PURE__*/React.createElement(FlowBuilderModal,{open:contactModalOpen,onClose:handleCloseContactModal,\"aria-labelledby\":\"form-dialog-title\",flowId:selectedContactId,nameWebhook:selectedWebhookName,onSave:()=>setReloadData(old=>!old)}),/*#__PURE__*/React.createElement(ConfirmationModal,{title:deletingContact?\"\".concat(i18n.t(\"contacts.confirmationModal.deleteTitle\"),\" \").concat(deletingContact.name,\"?\"):\"\".concat(i18n.t(\"contacts.confirmationModal.importTitlte\")),open:confirmOpen,onClose:setConfirmOpen,onConfirm:e=>deletingContact?handleDeleteWebhook(deletingContact.id):()=>{}},deletingContact?\"Tem certeza que deseja deletar este fluxo? Todas as integra\\xE7\\xF5es relacionados ser\\xE3o perdidos.\":\"\".concat(i18n.t(\"contacts.confirmationModal.importMessage\"))),/*#__PURE__*/React.createElement(MainHeader,null,/*#__PURE__*/React.createElement(Title,null,\"Fluxo padr\\xE3o\")),/*#__PURE__*/React.createElement(Paper,{className:classes.mainPaper,variant:\"outlined\"},/*#__PURE__*/React.createElement(Stack,{sx:{padding:'12px',position:'relative'}},/*#__PURE__*/React.createElement(Stack,{sx:{position:'absolute',right:0}},/*#__PURE__*/React.createElement(Button,{onClick:()=>handleSaveDefault(),variant:\"contained\",sx:{backgroundColor:colorPrimary(),'&:hover':{backgroundColor:\"\".concat(colorPrimary(),\"90\")}}},\"Salvar\")),/*#__PURE__*/React.createElement(Stack,{gap:'12px'},/*#__PURE__*/React.createElement(Typography,{fontSize:18,fontWeight:700},\"Fluxo de boas vindas\"),/*#__PURE__*/React.createElement(Typography,{fontSize:12},\"Este fluxo \\xE9 disparado apenas para novos contatos, pessoas que voce n\\xE3o possui em sua lista de contatos e que mandaram uma mensagem\"),!loading&&/*#__PURE__*/React.createElement(Autocomplete,{disablePortal:true,id:\"combo-box-demo\",value:flowSelectedWelcome,options:flowsData,onChange:(event,newValue)=>{setFlowSelectedWelcome(newValue);},sx:{width:\"100%\"},renderInput:params=>/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{variant:\"outlined\",placeholder:\"Escolha um fluxo\"})),renderTags:(value,getTagProps)=>value.map((option,index)=>/*#__PURE__*/React.createElement(Chip,Object.assign({variant:\"outlined\",label:option},getTagProps({index}),{style:{borderRadius:\"8px\"}})))}),loading&&/*#__PURE__*/React.createElement(Stack,{alignSelf:'center'},/*#__PURE__*/React.createElement(CircularProgress,{sx:{color:colorPrimary()}}))),/*#__PURE__*/React.createElement(Stack,{gap:'12px',marginTop:4},/*#__PURE__*/React.createElement(Typography,{fontSize:18,fontWeight:700},\"Fluxo de resposta padr\\xE3o\"),/*#__PURE__*/React.createElement(Typography,{fontSize:12},\"Resposta Padr\\xE3o \\xE9 enviada com qualquer caractere diferente de uma palavra chave. ATEN\\xC7\\xC3O! Ser\\xE1 disparada se o atendimento ja estiver fechado e passado 6 horas do seu fechamento.\"),!loading&&/*#__PURE__*/React.createElement(Autocomplete,{disablePortal:true,id:\"combo-box-demo\",value:flowSelectedPhrase,options:flowsData,onChange:(event,newValue)=>{setFlowSelectedPhrase(newValue);},sx:{width:\"100%\"},renderInput:params=>/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{variant:\"outlined\",placeholder:\"Escolha um fluxo\"})),renderTags:(value,getTagProps)=>value.map((option,index)=>/*#__PURE__*/React.createElement(Chip,Object.assign({variant:\"outlined\",label:option},getTagProps({index}),{style:{borderRadius:\"8px\"}})))}),loading&&/*#__PURE__*/React.createElement(Stack,{alignSelf:'center'},/*#__PURE__*/React.createElement(CircularProgress,{sx:{color:colorPrimary()}}))))));};export default FlowDefault;","map":null,"metadata":{},"sourceType":"module"}