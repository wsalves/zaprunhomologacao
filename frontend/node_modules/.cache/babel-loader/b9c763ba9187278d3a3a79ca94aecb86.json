{"ast":null,"code":"import React,{useState,useEffect,useContext}from\"react\";import{useHistory}from\"react-router-dom\";import{makeStyles}from\"@material-ui/core/styles\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import Typography from\"@material-ui/core/Typography\";import Autocomplete,{createFilterOptions}from\"@material-ui/lab/Autocomplete\";import CircularProgress from\"@material-ui/core/CircularProgress\";import{i18n}from\"../../translate/i18n\";import api from\"../../services/api\";import ButtonWithSpinner from\"../ButtonWithSpinner\";import ContactModal from\"../ContactModal\";import toastError from\"../../errors/toastError\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{Grid,ListItemText,MenuItem,Select}from\"@material-ui/core\";import{toast}from\"react-toastify\";import{Facebook,Instagram,WhatsApp}from\"@material-ui/icons\";import ShowTicketOpen from\"../ShowTicketOpenModal\";const useStyles=makeStyles(theme=>({online:{fontSize:11,color:\"#25d366\"},offline:{fontSize:11,color:\"#e1306c\"}}));const filter=createFilterOptions({trim:true});const ContactSendModal=_ref=>{let{modalOpen,onClose}=_ref;const classes=useStyles();const[options,setOptions]=useState([]);const[loading,setLoading]=useState(false);const[searchParam,setSearchParam]=useState(\"\");const[selectedContact,setSelectedContact]=useState(null);const[newContact,setNewContact]=useState({});const[contactModalOpen,setContactModalOpen]=useState(false);const{user,socket}=useContext(AuthContext);const{companyId,whatsappId}=user;useEffect(()=>{if(!modalOpen||searchParam.length<3){setLoading(false);return;}setLoading(true);const delayDebounceFn=setTimeout(()=>{const fetchContacts=async()=>{try{const{data}=await api.get(\"contacts\",{params:{searchParam,channel:\"whatsapp\",isGroup:\"false\"}});setOptions(data.contacts);setLoading(false);}catch(err){setLoading(false);toastError(err);}};fetchContacts();},500);return()=>clearTimeout(delayDebounceFn);},[searchParam,modalOpen]);const handleClose=()=>{onClose();setSearchParam(\"\");setSelectedContact(null);};const handleSendVcard=async contact=>{if(!contact)return;setLoading(true);try{onClose(contact);}catch(err){}setLoading(false);};const handleSelectOption=(e,newValue)=>{if(newValue===null||newValue===void 0?void 0:newValue.number){setSelectedContact(newValue);}else if(newValue===null||newValue===void 0?void 0:newValue.name){setNewContact({name:newValue.name});setContactModalOpen(true);}};const handleCloseContactModal=()=>{setContactModalOpen(false);};const handleAddNewContactTicket=contact=>{handleSendVcard(contact);};const createAddContactOption=(filterOptions,params)=>{const filtered=filter(filterOptions,params);if(params.inputValue!==\"\"&&!loading&&searchParam.length>=3){filtered.push({name:\"\".concat(params.inputValue)});}return filtered;};const renderOption=option=>{if(option.number){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Typography,{component:\"span\",style:{fontSize:14,marginLeft:\"10px\",display:\"inline-flex\",alignItems:\"center\",lineHeight:\"2\"}},option.name,\" - \",option.number));}else{return\"\".concat(i18n.t(\"SendContactModal.add\"),\" \").concat(option.name);}};const renderOptionLabel=option=>{if(option.number){return\"\".concat(option.name,\" - \").concat(option.number);}else{return\"\".concat(option.name);}};const renderContactAutocomplete=()=>{return/*#__PURE__*/React.createElement(Grid,{xs:12,item:true},/*#__PURE__*/React.createElement(Autocomplete,{fullWidth:true,options:options,loading:loading,clearOnBlur:true,autoHighlight:true,freeSolo:true,clearOnEscape:true,getOptionLabel:renderOptionLabel,renderOption:renderOption,filterOptions:createAddContactOption,onChange:(e,newValue)=>handleSelectOption(e,newValue),renderInput:params=>/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:i18n.t(\"SendContactModal.fieldLabel\"),variant:\"outlined\",autoFocus:true,onChange:e=>setSearchParam(e.target.value),onKeyPress:e=>{if(loading||!selectedContact)return;else if(e.key===\"Enter\"){handleSendVcard(selectedContact);}},InputProps:{...params.InputProps,endAdornment:/*#__PURE__*/React.createElement(React.Fragment,null,loading?/*#__PURE__*/React.createElement(CircularProgress,{color:\"inherit\",size:20}):null,params.InputProps.endAdornment)}}))}));return null;};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ContactModal,{open:contactModalOpen,initialValues:newContact,onClose:handleCloseContactModal,onSave:handleAddNewContactTicket}),/*#__PURE__*/React.createElement(Dialog,{open:modalOpen,onClose:handleClose},/*#__PURE__*/React.createElement(DialogTitle,{id:\"form-dialog-title\"},i18n.t(\"SendContactModal.title\")),/*#__PURE__*/React.createElement(DialogContent,{dividers:true},/*#__PURE__*/React.createElement(Grid,{style:{width:300},container:true,spacing:2},renderContactAutocomplete())),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleClose,color:\"secondary\",disabled:loading,variant:\"outlined\"},i18n.t(\"SendContactModal.buttons.cancel\")),/*#__PURE__*/React.createElement(ButtonWithSpinner,{variant:\"contained\",type:\"button\",disabled:!selectedContact,onClick:()=>handleSendVcard(selectedContact),color:\"primary\",loading:loading},i18n.t(\"SendContactModal.buttons.ok\")))));};export default ContactSendModal;","map":null,"metadata":{},"sourceType":"module"}