{"ast":null,"code":"import React,{useState,useEffect,useReducer,useContext}from\"react\";import{toast}from\"react-toastify\";import{useHistory}from\"react-router-dom\";import{makeStyles}from\"@material-ui/core/styles\";import Paper from\"@material-ui/core/Paper\";import Button from\"@material-ui/core/Button\";import Table from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import IconButton from\"@material-ui/core/IconButton\";import SearchIcon from\"@material-ui/icons/Search\";import TextField from\"@material-ui/core/TextField\";import InputAdornment from\"@material-ui/core/InputAdornment\";import DeleteOutlineIcon from\"@material-ui/icons/DeleteOutline\";import EditIcon from\"@material-ui/icons/Edit\";import PeopleIcon from\"@material-ui/icons/People\";import DownloadIcon from\"@material-ui/icons/GetApp\";import MainContainer from\"../../components/MainContainer\";import MainHeader from\"../../components/MainHeader\";import Title from\"../../components/Title\";import api from\"../../services/api\";import{i18n}from\"../../translate/i18n\";import TableRowSkeleton from\"../../components/TableRowSkeleton\";import ContactListDialog from\"../../components/ContactListDialog\";import ConfirmationModal from\"../../components/ConfirmationModal\";import toastError from\"../../errors/toastError\";import{Grid}from\"@material-ui/core\";import planilhaExemplo from\"../../assets/planilha.xlsx\";// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport{AuthContext}from\"../../context/Auth/AuthContext\";const reducer=(state,action)=>{if(action.type===\"LOAD_CONTACTLISTS\"){const contactLists=action.payload;const newContactLists=[];contactLists.forEach(contactList=>{const contactListIndex=state.findIndex(u=>u.id===contactList.id);if(contactListIndex!==-1){state[contactListIndex]=contactList;}else{newContactLists.push(contactList);}});return[...state,...newContactLists];}if(action.type===\"UPDATE_CONTACTLIST\"){const contactList=action.payload;const contactListIndex=state.findIndex(u=>u.id===contactList.id);if(contactListIndex!==-1){state[contactListIndex]=contactList;return[...state];}else{return[contactList,...state];}}if(action.type===\"DELETE_CONTACTLIST\"){const contactListId=action.payload;const contactListIndex=state.findIndex(u=>u.id===contactListId);if(contactListIndex!==-1){state.splice(contactListIndex,1);}return[...state];}if(action.type===\"RESET\"){return[];}};const useStyles=makeStyles(theme=>({mainPaper:{flex:1,padding:theme.spacing(1),overflowY:\"scroll\",...theme.scrollbarStyles}}));const ContactLists=()=>{const classes=useStyles();const history=useHistory();const[loading,setLoading]=useState(false);const[pageNumber,setPageNumber]=useState(1);const[hasMore,setHasMore]=useState(false);const[selectedContactList,setSelectedContactList]=useState(null);const[deletingContactList,setDeletingContactList]=useState(null);const[contactListModalOpen,setContactListModalOpen]=useState(false);const[confirmModalOpen,setConfirmModalOpen]=useState(false);const[searchParam,setSearchParam]=useState(\"\");const[contactLists,dispatch]=useReducer(reducer,[]);//   const socketManager = useContext(SocketContext);\nconst{user,socket}=useContext(AuthContext);useEffect(()=>{dispatch({type:\"RESET\"});setPageNumber(1);},[searchParam]);useEffect(()=>{setLoading(true);const delayDebounceFn=setTimeout(()=>{const fetchContactLists=async()=>{try{const{data}=await api.get(\"/contact-lists/\",{params:{searchParam,pageNumber}});dispatch({type:\"LOAD_CONTACTLISTS\",payload:data.records});setHasMore(data.hasMore);setLoading(false);}catch(err){toastError(err);}};fetchContactLists();},500);return()=>clearTimeout(delayDebounceFn);},[searchParam,pageNumber]);useEffect(()=>{const companyId=user.companyId;// const socket = socketManager.GetSocket();\nconst onContactListEvent=data=>{if(data.action===\"update\"||data.action===\"create\"){dispatch({type:\"UPDATE_CONTACTLIST\",payload:data.record});}if(data.action===\"delete\"){dispatch({type:\"DELETE_CONTACTLIST\",payload:+data.id});}};socket.on(\"company-\".concat(companyId,\"-ContactList\"),onContactListEvent);return()=>{socket.off(\"company-\".concat(companyId,\"-ContactList\"),onContactListEvent);};},[]);const handleOpenContactListModal=()=>{setSelectedContactList(null);setContactListModalOpen(true);};const handleCloseContactListModal=()=>{setSelectedContactList(null);setContactListModalOpen(false);};const handleSearch=event=>{setSearchParam(event.target.value.toLowerCase());};const handleEditContactList=contactList=>{setSelectedContactList(contactList);setContactListModalOpen(true);};const handleDeleteContactList=async contactListId=>{try{await api.delete(\"/contact-lists/\".concat(contactListId));toast.success(i18n.t(\"contactLists.toasts.deleted\"));}catch(err){toastError(err);}setDeletingContactList(null);setSearchParam(\"\");setPageNumber(1);};const loadMore=()=>{setPageNumber(prevState=>prevState+1);};const handleScroll=e=>{if(!hasMore||loading)return;const{scrollTop,scrollHeight,clientHeight}=e.currentTarget;if(scrollHeight-(scrollTop+100)<clientHeight){loadMore();}};const goToContacts=id=>{history.push(\"/contact-lists/\".concat(id,\"/contacts\"));};return/*#__PURE__*/React.createElement(MainContainer,null,/*#__PURE__*/React.createElement(ConfirmationModal,{title:deletingContactList&&\"\".concat(i18n.t(\"contactLists.confirmationModal.deleteTitle\"),\" \").concat(deletingContactList.name,\"?\"),open:confirmModalOpen,onClose:setConfirmModalOpen,onConfirm:()=>handleDeleteContactList(deletingContactList.id)},i18n.t(\"contactLists.confirmationModal.deleteMessage\")),/*#__PURE__*/React.createElement(ContactListDialog,{open:contactListModalOpen,onClose:handleCloseContactListModal,\"aria-labelledby\":\"form-dialog-title\",contactListId:selectedContactList&&selectedContactList.id}),/*#__PURE__*/React.createElement(MainHeader,null,/*#__PURE__*/React.createElement(Grid,{style:{width:\"99.6%\"},container:true},/*#__PURE__*/React.createElement(Grid,{xs:12,sm:8,item:true},/*#__PURE__*/React.createElement(Title,null,i18n.t(\"contactLists.title\"))),/*#__PURE__*/React.createElement(Grid,{xs:12,sm:4,item:true},/*#__PURE__*/React.createElement(Grid,{spacing:2,container:true},/*#__PURE__*/React.createElement(Grid,{xs:7,sm:6,item:true},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,placeholder:i18n.t(\"contacts.searchPlaceholder\"),type:\"search\",value:searchParam,onChange:handleSearch,InputProps:{startAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"start\"},/*#__PURE__*/React.createElement(SearchIcon,{style:{color:\"gray\"}}))}})),/*#__PURE__*/React.createElement(Grid,{xs:5,sm:6,item:true},/*#__PURE__*/React.createElement(Button,{fullWidth:true,variant:\"contained\",color:\"primary\",onClick:handleOpenContactListModal},i18n.t(\"contactLists.buttons.add\"))))))),/*#__PURE__*/React.createElement(Paper,{className:classes.mainPaper,variant:\"outlined\",onScroll:handleScroll},/*#__PURE__*/React.createElement(Table,{size:\"small\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"contactLists.table.name\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"contactLists.table.contacts\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"contactLists.table.actions\")))),/*#__PURE__*/React.createElement(TableBody,null,/*#__PURE__*/React.createElement(React.Fragment,null,contactLists.map(contactList=>/*#__PURE__*/React.createElement(TableRow,{key:contactList.id},/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},contactList.name),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},contactList.contactsCount||0),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},/*#__PURE__*/React.createElement(\"a\",{href:planilhaExemplo,download:\"planilha.xlsx\"},/*#__PURE__*/React.createElement(IconButton,{size:\"small\",title:\"Baixar Planilha Exemplo\"},/*#__PURE__*/React.createElement(DownloadIcon,null))),/*#__PURE__*/React.createElement(IconButton,{size:\"small\",onClick:()=>goToContacts(contactList.id)},/*#__PURE__*/React.createElement(PeopleIcon,null)),/*#__PURE__*/React.createElement(IconButton,{size:\"small\",onClick:()=>handleEditContactList(contactList)},/*#__PURE__*/React.createElement(EditIcon,null)),/*#__PURE__*/React.createElement(IconButton,{size:\"small\",onClick:e=>{setConfirmModalOpen(true);setDeletingContactList(contactList);}},/*#__PURE__*/React.createElement(DeleteOutlineIcon,null))))),loading&&/*#__PURE__*/React.createElement(TableRowSkeleton,{columns:3}))))));};export default ContactLists;","map":null,"metadata":{},"sourceType":"module"}