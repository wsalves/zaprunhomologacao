{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getData } from '../utils';\nimport NimbleEmoji from './emoji/nimble-emoji';\nimport SkinsEmoji from './skins-emoji';\nimport SkinsDot from './skins-dot';\nvar Preview = /*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Preview, _React$PureComponent);\n  function Preview(props) {\n    var _this;\n    _classCallCheck(this, Preview);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Preview).call(this, props));\n    _this.data = props.data;\n    _this.state = {\n      emoji: null\n    };\n    return _this;\n  }\n  _createClass(Preview, [{\n    key: \"render\",\n    value: function render() {\n      var emoji = this.state.emoji,\n        _this$props = this.props,\n        emojiProps = _this$props.emojiProps,\n        skinsProps = _this$props.skinsProps,\n        showSkinTones = _this$props.showSkinTones,\n        title = _this$props.title,\n        idleEmoji = _this$props.emoji,\n        i18n = _this$props.i18n,\n        showPreview = _this$props.showPreview;\n      if (emoji && showPreview) {\n        var emojiData = getData(emoji, null, null, this.data),\n          _emojiData$emoticons = emojiData.emoticons,\n          emoticons = _emojiData$emoticons === void 0 ? [] : _emojiData$emoticons,\n          knownEmoticons = [],\n          listedEmoticons = [];\n        emoticons.forEach(function (emoticon) {\n          if (knownEmoticons.indexOf(emoticon.toLowerCase()) >= 0) {\n            return;\n          }\n          knownEmoticons.push(emoticon.toLowerCase());\n          listedEmoticons.push(emoticon);\n        });\n        return React.createElement(\"div\", {\n          className: \"emoji-mart-preview\"\n        }, React.createElement(\"div\", {\n          className: \"emoji-mart-preview-emoji\",\n          \"aria-hidden\": \"true\"\n        }, NimbleEmoji(_objectSpread({\n          key: emoji.id,\n          emoji: emoji,\n          data: this.data\n        }, emojiProps))), React.createElement(\"div\", {\n          className: \"emoji-mart-preview-data\",\n          \"aria-hidden\": \"true\"\n        }, React.createElement(\"div\", {\n          className: \"emoji-mart-preview-name\"\n        }, emoji.name), React.createElement(\"div\", {\n          className: \"emoji-mart-preview-shortnames\"\n        }, emojiData.short_names.map(function (short_name) {\n          return React.createElement(\"span\", {\n            key: short_name,\n            className: \"emoji-mart-preview-shortname\"\n          }, \":\", short_name, \":\");\n        })), React.createElement(\"div\", {\n          className: \"emoji-mart-preview-emoticons\"\n        }, listedEmoticons.map(function (emoticon) {\n          return React.createElement(\"span\", {\n            key: emoticon,\n            className: \"emoji-mart-preview-emoticon\"\n          }, emoticon);\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"emoji-mart-preview\"\n        }, React.createElement(\"div\", {\n          className: \"emoji-mart-preview-emoji\",\n          \"aria-hidden\": \"true\"\n        }, idleEmoji && idleEmoji.length && NimbleEmoji(_objectSpread({\n          emoji: idleEmoji,\n          data: this.data\n        }, emojiProps))), React.createElement(\"div\", {\n          className: \"emoji-mart-preview-data\",\n          \"aria-hidden\": \"true\"\n        }, React.createElement(\"span\", {\n          className: \"emoji-mart-title-label\"\n        }, title)), showSkinTones && React.createElement(\"div\", {\n          className: \"emoji-mart-preview-skins\".concat(skinsProps.skinEmoji ? ' custom' : '')\n        }, skinsProps.skinEmoji ? React.createElement(SkinsEmoji, {\n          skin: skinsProps.skin,\n          emojiProps: emojiProps,\n          data: this.data,\n          skinEmoji: skinsProps.skinEmoji,\n          i18n: i18n,\n          onChange: skinsProps.onChange\n        }) : React.createElement(SkinsDot, {\n          skin: skinsProps.skin,\n          i18n: i18n,\n          onChange: skinsProps.onChange\n        })));\n      }\n    }\n  }]);\n  return Preview;\n}(React.PureComponent);\nexport { Preview as default };\nPreview.propTypes\n/* remove-proptypes */ = {\n  showSkinTones: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  emoji: PropTypes.string.isRequired,\n  emojiProps: PropTypes.object.isRequired,\n  skinsProps: PropTypes.object.isRequired\n};\nPreview.defaultProps = {\n  showSkinTones: true,\n  onChange: function onChange() {}\n};","map":null,"metadata":{},"sourceType":"module"}