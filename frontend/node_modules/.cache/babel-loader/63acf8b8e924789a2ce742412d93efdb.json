{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'las horas',\n  minutes: 'los minutos',\n  seconds: 'los segundos'\n};\nconst esESPickers = {\n  // Calendar navigation\n  previousMonth: 'Último mes',\n  nextMonth: 'Próximo mes',\n  // View navigation\n  openPreviousView: 'abrir la última vista',\n  openNextView: 'abrir la siguiente vista',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'la vista del año está abierta, cambie a la vista de calendario' : 'la vista de calendario está abierta, cambie a la vista del año',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? \"la vista de entrada de texto est\\xE1 abierta, ir a la vista \".concat(viewType) : \"la vista \".concat(viewType, \" est\\xE1 abierta, ir a la vista de entrada de texto\"),\n  // DateRange placeholders\n  start: 'Empezar',\n  end: 'Terminar',\n  // Action bar\n  cancelButtonLabel: 'Cancelar',\n  clearButtonLabel: 'Limpiar',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Hoy',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Seleccionar fecha',\n  dateTimePickerDefaultToolbarTitle: 'Seleccionar fecha & hora',\n  timePickerDefaultToolbarTitle: 'Seleccionar hora',\n  dateRangePickerDefaultToolbarTitle: 'Seleccionar rango de fecha',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => \"Seleccione \".concat(views[view], \". \").concat(time === null ? 'Sin tiempo seleccionado' : \"El tiempo seleccionado es \".concat(adapter.format(time, 'fullTime'))),\n  hoursClockNumberText: hours => \"\".concat(hours, \" horas\"),\n  minutesClockNumberText: minutes => \"\".concat(minutes, \" minutos\"),\n  secondsClockNumberText: seconds => \"\".concat(seconds, \" segundos\"),\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? \"Elige la fecha, la fecha elegida es \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Elige la fecha',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? \"Elige la hora, la hora elegido es \".concat(utils.format(utils.date(rawValue), 'fullTime')) : 'Elige la hora',\n  // Table labels\n  timeTableLabel: 'elige la fecha',\n  dateTableLabel: 'elige la hora'\n};\nexport const esES = getPickersLocalization(esESPickers);","map":null,"metadata":{},"sourceType":"module"}